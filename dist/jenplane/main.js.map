{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_dialogs/dialog-delete.component.css","webpack:///./src/app/_dialogs/dialog-delete.component.html","webpack:///./src/app/_dialogs/dialog-delete.component.ts","webpack:///./src/app/_guards/admin-guard.service.ts","webpack:///./src/app/_guards/auth-guard.service.ts","webpack:///./src/app/_guards/redirect-login-guard.service.ts","webpack:///./src/app/_helpers/must-match.validator.ts","webpack:///./src/app/_services/api.service.ts","webpack:///./src/app/_services/auth.service.ts","webpack:///./src/app/admin/admin-home/admin-home.component.css","webpack:///./src/app/admin/admin-home/admin-home.component.html","webpack:///./src/app/admin/admin-home/admin-home.component.ts","webpack:///./src/app/admin/admin-organization/admin-organization-create/admin-organization-create.component.css","webpack:///./src/app/admin/admin-organization/admin-organization-create/admin-organization-create.component.html","webpack:///./src/app/admin/admin-organization/admin-organization-create/admin-organization-create.component.ts","webpack:///./src/app/admin/admin-outlet/admin-outlet.component.css","webpack:///./src/app/admin/admin-outlet/admin-outlet.component.html","webpack:///./src/app/admin/admin-outlet/admin-outlet.component.ts","webpack:///./src/app/admin/admin-routing.module.ts","webpack:///./src/app/admin/admin-user/admin-user-create/admin-user-create.component.css","webpack:///./src/app/admin/admin-user/admin-user-create/admin-user-create.component.html","webpack:///./src/app/admin/admin-user/admin-user-create/admin-user-create.component.ts","webpack:///./src/app/admin/admin-user/admin-user-detail/admin-user-detail.component.css","webpack:///./src/app/admin/admin-user/admin-user-detail/admin-user-detail.component.html","webpack:///./src/app/admin/admin-user/admin-user-detail/admin-user-detail.component.ts","webpack:///./src/app/admin/admin-user/admin-user-list/admin-user-list.component.css","webpack:///./src/app/admin/admin-user/admin-user-list/admin-user-list.component.html","webpack:///./src/app/admin/admin-user/admin-user-list/admin-user-list.component.ts","webpack:///./src/app/admin/admin.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/components/footer/footer.component.css","webpack:///./src/app/core/components/footer/footer.component.html","webpack:///./src/app/core/components/footer/footer.component.ts","webpack:///./src/app/core/components/header/header.component.css","webpack:///./src/app/core/components/header/header.component.html","webpack:///./src/app/core/components/header/header.component.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/organization/organization-detail/organization-detail.component.css","webpack:///./src/app/organization/organization-detail/organization-detail.component.html","webpack:///./src/app/organization/organization-detail/organization-detail.component.ts","webpack:///./src/app/organization/organization-home/organization-home.component.css","webpack:///./src/app/organization/organization-home/organization-home.component.html","webpack:///./src/app/organization/organization-home/organization-home.component.ts","webpack:///./src/app/organization/organization-list/organization-list.component.css","webpack:///./src/app/organization/organization-list/organization-list.component.html","webpack:///./src/app/organization/organization-list/organization-list.component.ts","webpack:///./src/app/organization/organization-routing.module.ts","webpack:///./src/app/organization/organization.module.ts","webpack:///./src/app/project/project-create/project-create.component.css","webpack:///./src/app/project/project-create/project-create.component.html","webpack:///./src/app/project/project-create/project-create.component.ts","webpack:///./src/app/project/project-detail/project-detail.component.css","webpack:///./src/app/project/project-detail/project-detail.component.html","webpack:///./src/app/project/project-detail/project-detail.component.ts","webpack:///./src/app/project/project-home/project-home.component.css","webpack:///./src/app/project/project-home/project-home.component.html","webpack:///./src/app/project/project-home/project-home.component.ts","webpack:///./src/app/project/project-list/project-list.component.css","webpack:///./src/app/project/project-list/project-list.component.html","webpack:///./src/app/project/project-list/project-list.component.ts","webpack:///./src/app/project/project-routing.module.ts","webpack:///./src/app/project/project.module.ts","webpack:///./src/app/resource/resource-create/resource-create.component.css","webpack:///./src/app/resource/resource-create/resource-create.component.html","webpack:///./src/app/resource/resource-create/resource-create.component.ts","webpack:///./src/app/resource/resource-detail/resource-detail.component.css","webpack:///./src/app/resource/resource-detail/resource-detail.component.html","webpack:///./src/app/resource/resource-detail/resource-detail.component.ts","webpack:///./src/app/resource/resource-home/resource-home.component.css","webpack:///./src/app/resource/resource-home/resource-home.component.html","webpack:///./src/app/resource/resource-home/resource-home.component.ts","webpack:///./src/app/resource/resource-list/resource-list.component.css","webpack:///./src/app/resource/resource-list/resource-list.component.html","webpack:///./src/app/resource/resource-list/resource-list.component.ts","webpack:///./src/app/resource/resource-routing.module.ts","webpack:///./src/app/resource/resource.module.ts","webpack:///./src/app/role/role-create/role-create.component.css","webpack:///./src/app/role/role-create/role-create.component.html","webpack:///./src/app/role/role-create/role-create.component.ts","webpack:///./src/app/role/role-data.service.ts","webpack:///./src/app/role/role-detail/role-detail.component.css","webpack:///./src/app/role/role-detail/role-detail.component.html","webpack:///./src/app/role/role-detail/role-detail.component.ts","webpack:///./src/app/role/role-home/role-home.component.css","webpack:///./src/app/role/role-home/role-home.component.html","webpack:///./src/app/role/role-home/role-home.component.ts","webpack:///./src/app/role/role-list/role-list.component.css","webpack:///./src/app/role/role-list/role-list.component.html","webpack:///./src/app/role/role-list/role-list.component.ts","webpack:///./src/app/role/role-routing.module.ts","webpack:///./src/app/role/role.module.ts","webpack:///./src/app/user/user-home/user-home.component.css","webpack:///./src/app/user/user-home/user-home.component.html","webpack:///./src/app/user/user-home/user-home.component.ts","webpack:///./src/app/user/user-login/user-login.component.css","webpack:///./src/app/user/user-login/user-login.component.html","webpack:///./src/app/user/user-login/user-login.component.ts","webpack:///./src/app/user/user-profile/user-profile.component.css","webpack:///./src/app/user/user-profile/user-profile.component.html","webpack:///./src/app/user/user-profile/user-profile.component.ts","webpack:///./src/app/user/user-register/user-register.component.css","webpack:///./src/app/user/user-register/user-register.component.html","webpack:///./src/app/user/user-register/user-register.component.ts","webpack:///./src/app/user/user-routing.module.ts","webpack:///./src/app/user/user.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".example-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  max-height: 500px;\\r\\n  min-width: 300px;\\r\\n  overflow: auto;\\r\\n}\\r\\n\\r\\n.isbn-col {\\r\\n  flex: 0 0 100px !important;\\r\\n  white-space: unset !important;\\r\\n}\\r\\n\\r\\n.button-row {\\r\\n  margin: 10px 0;\\r\\n}\\r\\n\"","module.exports = \"<h2 mat-dialog-title>Confirm</h2>\\n<mat-dialog-content class=\\\"mat-typography\\\">\\n    Are you sure?\\n</mat-dialog-content>\\n<mat-dialog-actions align=\\\"end\\\">\\n  <button mat-button mat-dialog-close>Cancel</button>\\n  <button mat-button [mat-dialog-close]=\\\"true\\\" cdkFocusInitial>Yes</button>\\n</mat-dialog-actions>\"","import {Component, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'dialog-delete',\r\n    templateUrl: './dialog-delete.component.html',\r\n    styleUrls: ['./dialog-delete.component.css']\r\n})\r\nexport class DialogDeleteComponent implements OnInit {\r\n    constructor(){}\r\n    ngOnInit() {}\r\n}","import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, Route } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, tap, map } from 'rxjs/operators';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\nimport { ApiService } from '../_services/api.service';\n\n@Injectable()\nexport class AdminGuard implements CanActivate {\n    \n    constructor(private apiService: ApiService, private router: Router) {\n    }\n    \n    public canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        \n        // Check if the user is a superadmin\n        return this.apiService.isSuperadmin().map(resp => {\n            if (resp['success'] !== undefined && resp['success'] == true) {\n                return true;\n            }\n        }).catch(() => {\n            this.router.navigate(['/dashboard']);\n            return Observable.of(false);\n        });\n    }\n}","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\n\nimport { AuthService } from '../_services/auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n    \n    constructor(private authService: AuthService, private router: Router) {\n    }\n    \n    canActivate(): boolean {\n        \n        // Logged-in user\n        if (this.authService.isAuthenticated()) {\n            return true;\n        }\n        \n        // Not logged gets redirected to login page\n        this.router.navigate(['/user/login']);\n\n        return false;\n    }\n}","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\n\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n@Injectable()\r\nexport class RedirectLoginGuard implements CanActivate {\r\n    \r\n    constructor(private authService: AuthService, private router: Router) {\r\n    }\r\n    \r\n    canActivate(): boolean {\r\n        // Logged-in user\r\n        if (this.authService.isAuthenticated()) {\r\n\t        // Redirect logged-in users\r\n\t        this.router.navigate(['/organizations']);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n}","import { FormGroup } from '@angular/forms';\n\n// custom validator to check that two fields match\nexport function MustMatch(controlName: string, matchingControlName: string) {\n    return (formGroup: FormGroup) => {\n        const control = formGroup.controls[controlName];\n        const matchingControl = formGroup.controls[matchingControlName];\n        if (!control || !matchingControl) {\n          return null;\n        }\n        \n        if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n            // return if another validator has already found an error on the matchingControl\n            return null;\n        }\n\n        // set error on matchingControl if validation fails\n        if (control.value !== matchingControl.value) {\n            matchingControl.setErrors({ mustMatch: true });\n        } else {\n            matchingControl.setErrors(null);\n        }\n    }\n}","import { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, tap, map } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { timeout } from 'rxjs/operators/timeout';\n\n// JSON as HTTP headers\nconst httpOptions = {\n    headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n    }\n    )\n};\n\n// The API routes\n\n// Main route\nconst apiUrl = '/api';\n\n// Sub-routes\nconst apiUrlOrganization = 'organization';\nconst apiUrlProject = 'project';\nconst apiUrlResource = 'resource';\nconst apiUrlUser = 'user';\nconst apiUrlRole = 'role';\nconst apiUrlAdmin = 'admin';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ApiService {\n\n\n    constructor(private http: HttpClient, private route: ActivatedRoute, private router: Router) {\n    }\n    \n    // Error handling\n    private handleError(error: HttpErrorResponse) {\n        let errorMessage = '';\n        if (error.error instanceof ErrorEvent) {\n            // client-side error\n            errorMessage = `Error: ${error.error.message}`;\n        } else {\n            // server-side error\n            errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n        }\n\n        return throwError(error);\n    };\n    \n    ///////////////\n    /*\n        API calls for organizations\n    */\n    //////////////\n\n    getOrganizations(): Observable<any> {\n\n        let httpOptionsAuthorization = {\n            headers: new HttpHeaders(\n            {\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('jwtToken')\n            }\n            )\n        };\n        const url = `${apiUrl}/${apiUrlOrganization}`;\n        return this.http.get(url, httpOptionsAuthorization)\n        .pipe(timeout(300000), catchError(this.handleError));\n    }\n    \n    getOrganization(id: string): Observable<any> {\n\n        let httpOptionsAuthorization = {\n            headers: new HttpHeaders(\n            {\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('jwtToken')\n            }\n            )\n        };\n        const url = `${apiUrl}/${apiUrlOrganization}/${id}`;\n        return this.http.get(url, httpOptionsAuthorization)\n        .pipe(timeout(300000), catchError(this.handleError));\n    }\n\n    putOrganization(id: string, data): Observable<any> {\n\n        let httpOptionsAuthorization = {\n            headers: new HttpHeaders(\n            {\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('jwtToken')\n            }\n            )\n        };\n        const url = `${apiUrl}/${apiUrlOrganization}/${id}`;\n        return this.http.put(url, data, httpOptionsAuthorization)\n        .pipe(timeout(300000), catchError(this.handleError));\n    } \n\n    deleteOrganization(id: string): Observable<{}> {\n\n        let httpOptionsAuthorization = {\n            headers: new HttpHeaders(\n            {\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('jwtToken')\n            }\n            )\n        };\n        const url = `${apiUrl}/${apiUrlOrganization}/${id}`;\n        return this.http.delete(url, httpOptionsAuthorization)\n        .pipe(timeout(300000), catchError(this.handleError));\n    }\n\n    lockOrganization(id: string): Observable<{}> {\n\n        let httpOptionsAuthorization = {\n            headers: new HttpHeaders(\n            {\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('jwtToken')\n            }\n            )\n        };\n        const url = `${apiUrl}/${apiUrlOrganization}/${id}/lock`;\n        return this.http.get(url, httpOptionsAuthorization)\n        .pipe(timeout(300000), catchError(this.handleError));\n    }\n\n    unlockOrganization(id: string): Observable<{}> {\n\n        let httpOptionsAuthorization = {\n            headers: new HttpHeaders(\n            {\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('jwtToken')\n            }\n            )\n        };\n        const url = `${apiUrl}/${apiUrlOrganization}/${id}/unlock`;\n        return this.http.get(url, httpOptionsAuthorization)\n        .pipe(timeout(300000), catchError(this.handleError));\n    }\n\n    ///////////////\n    /*\n        API calls for projects\n    */\n    //////////////\n\n    getProjects(orgId : string): Observable<any> {\n\n        let httpOptionsAuthorization = {\n            headers: new HttpHeaders(\n            {\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('jwtToken')\n            }\n            )\n        };\n        const url = `${apiUrl}/${apiUrlProject}/org/${orgId}`;\n        return this.http.get(url, httpOptionsAuthorization)\n        .pipe(timeout(300000), catchError(this.handleError));\n    }\n\n    getProject(id: string): Observable<any> {\n\n        let httpOptionsAuthorization = {\n            headers: new HttpHeaders(\n            {\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('jwtToken')\n            }\n            )\n        };\n        const url = `${apiUrl}/${apiUrlProject}/${id}`;\n        return this.http.get(url, httpOptionsAuthorization)\n        .pipe(timeout(300000), catchError(this.handleError));\n    }\n\n    postProject(orgId : string, data): Observable<any> {\n\n        let httpOptionsAuthorization = {\n            headers: new HttpHeaders(\n            {\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('jwtToken')\n            }\n            )\n        };\n        const url = `${apiUrl}/${apiUrlProject}/org/${orgId}`;\n        return this.http.post(url, data, httpOptionsAuthorization)\n        .pipe(timeout(300000), catchError(this.handleError));\n    }\n\n    putProject(id: string, data): Observable<any> {\n\n        let httpOptionsAuthorization = {\n            headers: new HttpHeaders(\n            {\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('jwtToken')\n            }\n            )\n        };\n        const url = `${apiUrl}/${apiUrlProject}/${id}`;\n        return this.http.put(url, data, httpOptionsAuthorization)\n        .pipe(timeout(300000), catchError(this.handleError));\n    }\n\n    deleteProject(id: string): Observable<{}> {\n\n        let httpOptionsAuthorization = {\n            headers: new HttpHeaders(\n            {\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('jwtToken')\n            }\n            )\n        };\n        const url = `${apiUrl}/${apiUrlProject}/${id}`;\n        return this.http.delete(url, httpOptionsAuthorization)\n        .pipe(timeout(300000), catchError(this.handleError));\n    }\n\n    lockProject(id: string): Observable<{}> {\n\n        let httpOptionsAuthorization = {\n            headers: new HttpHeaders(\n            {\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('jwtToken')\n            }\n            )\n        };\n        const url = `${apiUrl}/${apiUrlProject}/${id}/lock`;\n        return this.http.get(url, httpOptionsAuthorization)\n        .pipe(timeout(300000), catchError(this.handleError));\n    }\n\n    unlockProject(id: string): Observable<{}> {\n\n        let httpOptionsAuthorization = {\n            headers: new HttpHeaders(\n            {\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('jwtToken')\n            }\n            )\n        };\n        const url = `${apiUrl}/${apiUrlProject}/${id}/unlock`;\n        return this.http.get(url, httpOptionsAuthorization)\n        .pipe(timeout(300000), catchError(this.handleError));\n    }\n\n    ///////////////\n    /*\n        API calls for resources\n    */\n    //////////////\n\n    getResources(projId : string): Observable<any> {\n\n        let httpOptionsAuthorization = {\n            headers: new HttpHeaders(\n            {\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('jwtToken')\n            }\n            )\n        };\n        const url = `${apiUrl}/${apiUrlResource}/project/${projId}`;\n        return this.http.get(url, httpOptionsAuthorization)\n        .pipe(timeout(300000), catchError(this.handleError));\n    }\n\n    getResource(id: string): Observable<any> {\n\n        let httpOptionsAuthorization = {\n            headers: new HttpHeaders(\n            {\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('jwtToken')\n            }\n            )\n        };\n        const url = `${apiUrl}/${apiUrlResource}/${id}`;\n        return this.http.get(url, httpOptionsAuthorization)\n        .pipe(timeout(300000), catchError(this.handleError));\n    }\n\n    postResource(projId : string, data): Observable<any> {\n\n        let httpOptionsAuthorization = {\n            headers: new HttpHeaders(\n            {\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('jwtToken')\n            }\n            )\n        };\n        const url = `${apiUrl}/${apiUrlResource}/project/${projId}`;\n        return this.http.post(url, data, httpOptionsAuthorization)\n        .pipe(timeout(300000), catchError(this.handleError));\n    }\n\n    putResource(id: string, data): Observable<any> {\n\n        let httpOptionsAuthorization = {\n            headers: new HttpHeaders(\n            {\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('jwtToken')\n            }\n            )\n        };\n        const url = `${apiUrl}/${apiUrlResource}/${id}`;\n        return this.http.put(url, data, httpOptionsAuthorization)\n        .pipe(timeout(300000), catchError(this.handleError));\n    }\n\n    deleteResource(id: string): Observable<{}> {\n\n        let httpOptionsAuthorization = {\n            headers: new HttpHeaders(\n            {\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('jwtToken')\n            }\n            )\n        };\n        const url = `${apiUrl}/${apiUrlResource}/${id}`;\n        return this.http.delete(url, httpOptionsAuthorization)\n        .pipe(timeout(300000), catchError(this.handleError));\n    }\n\n    ///////////////\n    /*\n        API calls for users\n    */\n    //////////////\n\n    registerUser(data): Observable<any> {\n        const url = `${apiUrl}/${apiUrlUser}/register`;\n        return this.http.post(url, data, httpOptions)\n        .pipe(timeout(300000), catchError(this.handleError));\n    }\n\n    loginUser(data): Observable<any> {\n        const url = `${apiUrl}/${apiUrlUser}/login`;\n        return this.http.post(url, data, httpOptions)\n        .pipe(timeout(300000), catchError(this.handleError));\n    }\n\n    getLoggedInUser(): Observable<any> {\n\n        let httpOptionsAuthorization = {\n            headers: new HttpHeaders(\n            {\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('jwtToken')\n            }\n            )\n        };\n        const url = `${apiUrl}/${apiUrlUser}/profile`;\n        return this.http.get(url, httpOptionsAuthorization)\n        .pipe(timeout(300000), catchError(this.handleError));\n    }\n\n    putLoggedInUser(data): Observable<any> {\n\n        let httpOptionsAuthorization = {\n            headers: new HttpHeaders(\n            {\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('jwtToken')\n            }\n            )\n        };\n        const url = `${apiUrl}/${apiUrlUser}/profile`;\n        return this.http.put(url, data, httpOptionsAuthorization)\n        .pipe(timeout(300000), catchError(this.handleError));\n    }\n\n    getUsers(): Observable<any> {\n\n        let httpOptionsAuthorization = {\n            headers: new HttpHeaders(\n            {\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('jwtToken')\n            }\n            )\n        };\n        const url = `${apiUrl}/${apiUrlUser}`;\n        return this.http.get(url, httpOptionsAuthorization)\n        .pipe(timeout(300000), catchError(this.handleError));\n    }\n    isSuperadmin(): Observable<any> {\n\n        let httpOptionsAuthorization = {\n            headers: new HttpHeaders(\n            {\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('jwtToken')\n            }\n            )\n        };\n        const url = `${apiUrl}/${apiUrlUser}/superadmin`;\n        return this.http.get(url, httpOptionsAuthorization)\n        .pipe(timeout(300000), catchError(this.handleError));\n    }\n\n\n    ///////////////\n    /*\n        API calls for Superadmins\n    */\n    //////////////\n\n    postOrganization(data): Observable<any> {\n\n        let httpOptionsAuthorization = {\n            headers: new HttpHeaders(\n            {\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('jwtToken')\n            }\n            )\n        };\n        const url = `${apiUrl}/${apiUrlAdmin}/organization`;\n        return this.http.post(url, data, httpOptionsAuthorization)\n        .pipe(timeout(300000), catchError(this.handleError));\n    }\n\n    getUser(id: string): Observable<any> {\n\n        let httpOptionsAuthorization = {\n            headers: new HttpHeaders(\n            {\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('jwtToken')\n            }\n            )\n        };\n        const url = `${apiUrl}/${apiUrlAdmin}/user/${id}`;\n        return this.http.get(url, httpOptionsAuthorization)\n        .pipe(timeout(300000), catchError(this.handleError));\n    }\n    postUser(data): Observable<any> {\n\n        let httpOptionsAuthorization = {\n            headers: new HttpHeaders(\n            {\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('jwtToken')\n            }\n            )\n        };\n        const url = `${apiUrl}/${apiUrlAdmin}/user`;\n        return this.http.post(url, data, httpOptionsAuthorization)\n        .pipe(timeout(300000), catchError(this.handleError));\n    }\n    deleteUser(id: string): Observable<any> {\n\n        let httpOptionsAuthorization = {\n            headers: new HttpHeaders(\n            {\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('jwtToken')\n            }\n            )\n        };\n        const url = `${apiUrl}/${apiUrlAdmin}/user/${id}`;\n        return this.http.delete(url, httpOptionsAuthorization)\n        .pipe(timeout(300000), catchError(this.handleError));\n    }\n\n    putUser(id: string, data): Observable<any> {\n\n        let httpOptionsAuthorization = {\n            headers: new HttpHeaders(\n            {\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('jwtToken')\n            }\n            )\n        };\n        const url = `${apiUrl}/${apiUrlAdmin}/user/${id}`;\n        return this.http.put(url, data, httpOptionsAuthorization)\n        .pipe(timeout(300000), catchError(this.handleError));\n    }\n\n    /////////////\n\n    //// Roles\n\n    getUserRoles(roleModelType: string, roleModelId: string): Observable<any> {\n\n        let httpOptionsAuthorization = {\n            headers: new HttpHeaders(\n            {\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('jwtToken')\n            }\n            )\n        };\n        const url = `${apiUrl}/${apiUrlRole}/${roleModelType}/${roleModelId}`;\n        return this.http.get(url, httpOptionsAuthorization)\n        .pipe(timeout(300000), catchError(this.handleError));\n    }\n\n    getUserRole(id: string, roleModelType: string, roleModelId: string): Observable<any> {\n\n        let httpOptionsAuthorization = {\n            headers: new HttpHeaders(\n            {\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('jwtToken')\n            }\n            )\n        };\n        const url = `${apiUrl}/${apiUrlRole}/${id}/${roleModelType}/${roleModelId}`;\n        return this.http.get(url, httpOptionsAuthorization)\n        .pipe(timeout(300000), catchError(this.handleError));\n    }\n\n    putUserRole(id: string, roleModelType: string, roleModelId: string, data): Observable<any> {\n\n        let httpOptionsAuthorization = {\n            headers: new HttpHeaders(\n            {\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('jwtToken')\n            }\n            )\n        };\n        const url = `${apiUrl}/${apiUrlRole}/${id}/${roleModelType}/${roleModelId}`;\n        return this.http.put(url, data, httpOptionsAuthorization)\n        .pipe(timeout(300000), catchError(this.handleError));\n    }\n\n    postUserRole(roleModelType: string, roleModelId: string, data): Observable<any> {\n\n        let httpOptionsAuthorization = {\n            headers: new HttpHeaders(\n            {\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('jwtToken')\n            }\n            )\n        };\n        const url = `${apiUrl}/${apiUrlRole}/${roleModelType}/${roleModelId}`;\n        return this.http.post(url, data, httpOptionsAuthorization)\n        .pipe(timeout(300000), catchError(this.handleError));\n    }\n\n    deleteUserRole(id: string, roleModelType: string, roleModelId: string): Observable<any> {\n\n        let httpOptionsAuthorization = {\n            headers: new HttpHeaders(\n            {\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('jwtToken')\n            }\n            )\n        };\n        const url = `${apiUrl}/${apiUrlRole}/${id}/${roleModelType}/${roleModelId}`;\n        return this.http.delete(url, httpOptionsAuthorization)\n        .pipe(timeout(300000), catchError(this.handleError));\n    }\n}","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, pipe, throwError } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport jwt_decode from 'jwt-decode';\n\nimport { ApiService } from './api.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n\n    constructor(private router: Router, private apiService: ApiService) {}\n    \n    clear(): void {\n        localStorage.removeItem('jwtToken');\n    }\n    \n    isAuthenticated(): boolean {\n        var authenticated = false;\n        \n        if (localStorage.getItem('jwtToken') !== undefined &&\n            localStorage.getItem('jwtToken') != null){\n            authenticated = true;\n        }\n\n        return authenticated;\n    }\n\n    isSuperAdmin(): boolean {\n        const user = this.decode();\n        \n        if (user.superadmin !== undefined && user.superadmin == true){\n            return true;\n        }\n        else{\n            return false;\n        }\n    }\n    \n    logout(): void {\n        this.clear();\n        this.router.navigate(['/user/login']);\n    }\n    \n    decode() {\n        if (localStorage.getItem('jwtToken') !== undefined && localStorage.getItem('jwtToken') != null){\n            return jwt_decode(localStorage.getItem('jwtToken'));\n        }\n        return [];\n    }\n}","module.exports = \"mat-grid-tile {\\r\\n  background: lightblue;\\r\\n}\\r\\nmat-grid-tile a{\\r\\n\\tfont-size: 18px;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\r\\n\\t<div class=\\\"row\\\">\\r\\n\\t\\t<div class=\\\"col-lg-12\\\">\\r\\n\\t\\t\\t<button mat-raised-button color=\\\"primary\\\">\\r\\n\\t\\t\\t\\t<a [routerLink]=\\\"['users']\\\">Manage Users</a>\\r\\n\\t\\t\\t</button>\\r\\n\\t\\t\\t<button mat-raised-button color=\\\"primary\\\">\\r\\n\\t\\t\\t\\t<a [routerLink]=\\\"['organization/create']\\\">Create organization</a>\\r\\n\\t\\t\\t</button>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\n@Component({\n  selector: 'app-admin-home',\n  templateUrl: './admin-home.component.html',\n  styleUrls: ['./admin-home.component.css']\n})\nexport class AdminHomeComponent implements OnInit {\n  constructor() { }\n  ngOnInit() { }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"button-row\\\">\\n        <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/admin']\\\"><mat-icon>list</mat-icon></a>\\n    </div>\\n    <form [formGroup]=\\\"thisForm\\\" (ngSubmit)=\\\"onFormSubmit(thisForm.value)\\\">\\n\\n        <mat-checkbox formControlName=\\\"locked\\\">Lock organization?</mat-checkbox>\\n\\n        <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput placeholder=\\\"Shortname\\\" formControlName=\\\"shortname\\\" [errorStateMatcher]=\\\"matcher\\\">\\n            <mat-error>\\n                <span *ngIf=\\\"f.shortname.touched && f.shortname.errors?.required\\\">Required</span>\\n                <span *ngIf=\\\"f.shortname.touched && f.shortname.errors?.maxlength\\\">Maximum of 20 characters</span>\\n                <span *ngIf=\\\"f.shortname.touched && f.shortname.errors?.pattern\\\">Only alphanumeric characters without spaces are allowed</span>\\n            </mat-error>\\n        </mat-form-field>\\n        \\n        <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput placeholder=\\\"fullname\\\" formControlName=\\\"fullname\\\" [errorStateMatcher]=\\\"matcher\\\">\\n            <mat-error>\\n                <span *ngIf=\\\"f.fullname.touched && f.fullname.errors?.required\\\">Required</span>\\n                <span *ngIf=\\\"f.fullname.touched && f.fullname.errors?.maxlength\\\">Maximum of 256 characters</span>\\n            </mat-error>\\n        </mat-form-field>\\n        \\n        <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput type=\\\"email\\\" placeholder=\\\"email\\\" formControlName=\\\"email\\\" [errorStateMatcher]=\\\"matcher\\\">\\n            <mat-error>\\n                <span *ngIf=\\\"f.email.touched && f.email.errors?.required\\\">Required</span>\\n                <span *ngIf=\\\"f.email.touched && f.email.errors?.email\\\">Invalid email</span>\\n                <span *ngIf=\\\"f.email.touched && f.email.errors?.maxlength\\\">Maximum of 256 characters</span>\\n            </mat-error>\\n        </mat-form-field>\\n        \\n        <mat-form-field class=\\\"example-full-width\\\">\\n            <textarea matInput placeholder=\\\"Description\\\" formControlName=\\\"description\\\" [errorStateMatcher]=\\\"matcher\\\"></textarea>\\n            <mat-error>\\n                <span *ngIf=\\\"f.description.touched && f.description.errors?.maxlength\\\">Maximum of 500 characters</span>\\n            </mat-error>\\n        </mat-form-field>\\n\\n        <!-- <label>Logo</label>\\n        <br>\\n        <input id=\\\"logo\\\" name=\\\"logo\\\" type=\\\"file\\\" (change)=\\\"fileChangeEvent($event)\\\" placeholder=\\\"Upload a file...\\\" /> -->\\n        \\n        <mat-form-field class=\\\"example-full-width\\\">\\n            <textarea matInput placeholder=\\\"Address\\\" formControlName=\\\"address\\\" [errorStateMatcher]=\\\"matcher\\\"></textarea>\\n            <mat-error>\\n                <span *ngIf=\\\"f.address.touched && f.address.errors?.maxlength\\\">Maximum of 500 characters</span>\\n            </mat-error>\\n        </mat-form-field>\\n        \\n        <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput type=\\\"tel\\\" placeholder=\\\"Phone\\\" formControlName=\\\"phone\\\" [errorStateMatcher]=\\\"matcher\\\">\\n            <mat-error>\\n                <span *ngIf=\\\"f.phone.touched && f.phone.errors?.maxlength\\\">Maximum of 50 characters</span>\\n            </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput placeholder=\\\"country\\\" formControlName=\\\"country\\\" [errorStateMatcher]=\\\"matcher\\\">\\n            <mat-error>\\n                <span *ngIf=\\\"f.country.touched && f.country.errors?.maxlength\\\">Maximum of 50 characters</span>\\n            </mat-error>\\n        </mat-form-field>\\n        \\n        <div class=\\\"button-row\\\">\\n            <button type=\\\"submit\\\" [disabled]=\\\"!thisForm.valid\\\" mat-raised-button color=\\\"primary\\\"><mat-icon>save</mat-icon></button>\\n        </div>\\n    </form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { AlertsService } from 'angular-alert-module';\n\nimport { ApiService } from '../../../_services/api.service';\n\n@Component({\n    selector: 'app-admin-organization-create',\n    templateUrl: './admin-organization-create.component.html',\n    styleUrls: ['./admin-organization-create.component.css']\n})\nexport class AdminOrganizationCreateComponent implements OnInit {\n\n    thisForm: FormGroup;\n    \n    constructor(private alerts: AlertsService, private route: ActivatedRoute, private router: Router, private api: ApiService, private formBuilder: FormBuilder) { }\n    \n    ngOnInit() {\n        this.thisForm = this.formBuilder.group({\n            'locked': [false],\n            'shortname' : [null, [Validators.required, Validators.maxLength(20)]],\n            'fullname' : [null, [Validators.required, Validators.maxLength(256)]],\n            'email' : [null, [Validators.required, Validators.email, Validators.maxLength(256)]],\n            'description' : [null, Validators.maxLength(500)],\n            'address' : [null, Validators.maxLength(500)],\n            'phone' : [null, Validators.maxLength(50)],\n            'country' : [null, Validators.maxLength(50)]\n        });\n    }\n    get f() { return this.thisForm.controls; }\n\n    onFormSubmit(form:NgForm) {\n\n        this.api.postOrganization(form).subscribe(resp => {\n\n            // Ok\n            if (resp['success'] !== undefined && resp['success'] == true){\n                this.alerts.setMessage(resp['msg'],'success');\n            }\n\n            // Error\n            else{\n                let error = ('error' in resp) ? resp['error'] : '';\n                let errorMsg = ('msg' in resp) ? resp['msg'] : '';\n\n                // Duplicate unique fields\n                if ( error && error.code == 11000 ){\n                    var errorField = '';\n                    for (var fieldKey in error.field){\n                        errorField = fieldKey;\n                    }\n\n                    this.alerts.setMessage('Field must be unique: ' + errorField, 'error');\n                }\n\n                // Error message is available\n                else if ( errorMsg ){\n                    this.alerts.setMessage(errorMsg, 'error');\n                }\n            }\n            \n            this.router.navigate(['/organizations']);\n        },\n        err =>{\n            if(err['status'] == 401) {\n                localStorage.clear();\n                this.router.navigate(['/user/login']);\n            }\n        }\n        );\n    }\n}\n","module.exports = \"mat-grid-tile {\\r\\n  background: lightblue;\\r\\n}\\r\\nmat-grid-tile a{\\r\\n\\tfont-size: 18px;\\r\\n}\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\n@Component({\n  selector: 'app-admin-outlet',\n  templateUrl: './admin-outlet.component.html',\n  styleUrls: ['./admin-outlet.component.css']\n})\nexport class AdminOutletComponent implements OnInit {\n  constructor() { }\n  ngOnInit() { }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AdminOutletComponent } from './admin-outlet/admin-outlet.component';\nimport { AdminHomeComponent } from './admin-home/admin-home.component';\nimport { AdminUserCreateComponent } from './admin-user/admin-user-create/admin-user-create.component';\nimport { AdminUserListComponent }  from './admin-user/admin-user-list/admin-user-list.component';\nimport { AdminUserDetailComponent } from './admin-user/admin-user-detail/admin-user-detail.component';\nimport { AdminOrganizationCreateComponent }     from './admin-organization/admin-organization-create/admin-organization-create.component';\n\nimport { AdminGuard } from '../_guards/admin-guard.service';\n\nconst routes: Routes = [\n{\n    path: 'admin',\n    component: AdminOutletComponent,\n    canActivate: [AdminGuard],\n    children: [\n    {\n        path: '',\n        component: AdminHomeComponent\n    },\n    {\n        path: 'users',\n        component: AdminUserListComponent\n    },\n    {\n        path: 'users/create',\n        component: AdminUserCreateComponent\n    },\n    {\n        path: 'users/:id/detail',\n        component: AdminUserDetailComponent\n    },\n    {\n        path: 'org/create',\n        component: AdminOrganizationCreateComponent\n    },\n    ]\n}\n];\n\n@NgModule({\n    imports: [\n    RouterModule.forChild(routes),\n    ],\n    exports: [\n    RouterModule\n    ]\n})\nexport class AdminRoutingModule { }","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"button-row\\\">\\n        <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/users']\\\"><mat-icon>list</mat-icon></a>\\n    </div>\\n    <form [formGroup]=\\\"thisForm\\\" (ngSubmit)=\\\"onFormSubmit(thisForm.value)\\\">\\n    \\n        <div class=\\\"button-row\\\">\\n            <button type=\\\"submit\\\" [disabled]=\\\"!thisForm.valid\\\" mat-raised-button color=\\\"primary\\\"><mat-icon>save</mat-icon></button>\\n        </div>\\n        \\n        <mat-checkbox formControlName=\\\"blocked\\\">Block user?</mat-checkbox>\\n        <mat-checkbox formControlName=\\\"approved\\\">Approve user?</mat-checkbox>\\n\\n        <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput placeholder=\\\"Firstname\\\" formControlName=\\\"firstname\\\" [errorStateMatcher]=\\\"matcher\\\">\\n            <mat-error>\\n                <span *ngIf=\\\"f.firstname.touched && f.firstname.errors?.required\\\">Required</span>\\n                <span *ngIf=\\\"f.firstname.touched && f.firstname.errors?.maxlength\\\">Maximum of 50 characters</span>\\n            </mat-error>\\n        </mat-form-field>\\n        \\n        <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput placeholder=\\\"Lastname\\\" formControlName=\\\"lastname\\\" [errorStateMatcher]=\\\"matcher\\\">\\n            <mat-error>\\n                <span *ngIf=\\\"f.lastname.touched && f.lastname.errors?.required\\\">Required</span>\\n                <span *ngIf=\\\"f.lastname.touched && f.lastname.errors?.maxlength\\\">Maximum of 50 characters</span>\\n            </mat-error>\\n        </mat-form-field>\\n        \\n        <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput type=\\\"email\\\" placeholder=\\\"Email\\\" formControlName=\\\"email\\\" [errorStateMatcher]=\\\"matcher\\\">\\n            <mat-error>\\n                <span *ngIf=\\\"f.email.touched && f.email.errors?.required\\\">Required</span>\\n                <span *ngIf=\\\"f.email.touched && f.email.errors?.email\\\">Invalid email</span>\\n                <span *ngIf=\\\"f.email.touched && f.email.errors?.maxlength\\\">Maximum of 256 characters</span>\\n            </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput placeholder=\\\"Password\\\" formControlName=\\\"password\\\" [errorStateMatcher]=\\\"matcher\\\">\\n            <mat-error>\\n                <span *ngIf=\\\"f.password.touched && f.password.errors?.required\\\">Required</span>\\n                <span *ngIf=\\\"f.password.touched && f.password.errors?.minlength\\\">Minimum 6 characters</span>\\n            </mat-error>\\n        </mat-form-field>\\n        \\n        <div class=\\\"button-row\\\">\\n            <button type=\\\"submit\\\" [disabled]=\\\"!thisForm.valid\\\" mat-raised-button color=\\\"primary\\\"><mat-icon>save</mat-icon></button>\\n        </div>\\n    </form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { AlertsService } from 'angular-alert-module';\n\nimport { ApiService } from '../../../_services/api.service';\n\n@Component({\n    selector: 'app-admin-user-create',\n    templateUrl: './admin-user-create.component.html',\n    styleUrls: ['./admin-user-create.component.css']\n})\nexport class AdminUserCreateComponent implements OnInit {\n\n    thisForm: FormGroup;\n    \n    constructor(private alerts: AlertsService, private route: ActivatedRoute, private router: Router, private api: ApiService, private formBuilder: FormBuilder) { }\n    \n    ngOnInit() {\n        this.thisForm = this.formBuilder.group({\n            'blocked': [null],\n            'approved': [null],\n            'password': [null, [Validators.required, Validators.minLength(6)]],\n            'firstname': [null, Validators.maxLength(50)],\n            'lastname' : [null, Validators.maxLength(50)],\n            'email' : [null, [Validators.required, Validators.email, Validators.maxLength(256)]]\n        });\n    }\n    get f() { return this.thisForm.controls; }\n\n    onFormSubmit(form:NgForm) {\n        this.api.postUser(form).subscribe(resp => {\n             // Ok\n            if (resp['success'] !== undefined && resp['success'] == true) {\n                this.alerts.setMessage(resp['msg'],'success');\n            }\n\n            // Error\n            else{\n                let error = ('error' in resp) ? resp['error'] : '';\n                let errorMsg = ('msg' in resp) ? resp['msg'] : '';\n\n                // Duplicate unique fields\n                if ( error && error.code == 11000 ){\n                    var errorField = '';\n                    for (var fieldKey in error.field){\n                        errorField = fieldKey;\n                    }\n\n                    this.alerts.setMessage('Field must be unique: ' + errorField, 'error');\n                }\n\n                // Error message is available\n                else if ( errorMsg ){\n                    this.alerts.setMessage(errorMsg, 'error');\n                }\n            }\n            \n            this.router.navigate(['/admin/users']);\n        },\n        err =>{\n            if(err['status'] == 401) {\n                localStorage.clear();\n                this.router.navigate(['/user/login']);\n            }\n        }\n        );\n    }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"button-row\\\">\\n        <a mat-raised-button color=\\\"primary\\\" routerLink=\\\"/admin/users\\\"><mat-icon>list</mat-icon></a>\\n        <a mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteEntry()\\\"><mat-icon>delete_forever</mat-icon></a>\\n    </div>\\n    <form [formGroup]=\\\"thisForm\\\" (ngSubmit)=\\\"onFormSubmit(thisForm.value)\\\">\\n    \\n        <div class=\\\"button-row\\\">\\n            <button type=\\\"submit\\\" [disabled]=\\\"!thisForm.valid\\\" mat-raised-button color=\\\"primary\\\"><mat-icon>save</mat-icon></button>\\n        </div>\\n        \\n        <mat-checkbox formControlName=\\\"blocked\\\">Block user?</mat-checkbox>\\n        <mat-checkbox formControlName=\\\"approved\\\">Approve user?</mat-checkbox>\\n\\n        <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput placeholder=\\\"Firstname\\\" formControlName=\\\"firstname\\\" [errorStateMatcher]=\\\"matcher\\\">\\n            <mat-error>\\n                <span *ngIf=\\\"f.firstname.touched && f.firstname.errors?.required\\\">Required</span>\\n                <span *ngIf=\\\"f.firstname.touched && f.firstname.errors?.maxlength\\\">Maximum of 50 characters</span>\\n            </mat-error>\\n        </mat-form-field>\\n        \\n        <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput placeholder=\\\"Lastname\\\" formControlName=\\\"lastname\\\" [errorStateMatcher]=\\\"matcher\\\">\\n            <mat-error>\\n                <span *ngIf=\\\"f.lastname.touched && f.lastname.errors?.required\\\">Required</span>\\n                <span *ngIf=\\\"f.lastname.touched && f.lastname.errors?.maxlength\\\">Maximum of 50 characters</span>\\n            </mat-error>\\n        </mat-form-field>\\n        \\n        <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput type=\\\"email\\\" placeholder=\\\"Email\\\" formControlName=\\\"email\\\" [errorStateMatcher]=\\\"matcher\\\">\\n            <mat-error>\\n                <span *ngIf=\\\"f.email.touched && f.email.errors?.required\\\">Required</span>\\n                <span *ngIf=\\\"f.email.touched && f.email.errors?.email\\\">Invalid email</span>\\n                <span *ngIf=\\\"f.email.touched && f.email.errors?.maxlength\\\">Maximum of 256 characters</span>\\n            </mat-error>\\n        </mat-form-field>\\n        \\n        <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput type=\\\"email\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\">\\n        </mat-form-field>\\n        \\n        <div class=\\\"button-row\\\">\\n            <button type=\\\"submit\\\" [disabled]=\\\"!thisForm.valid\\\" mat-raised-button color=\\\"primary\\\"><mat-icon>save</mat-icon></button>\\n        </div>\\n    </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { ApiService } from '../../../_services/api.service';\nimport { DialogDeleteComponent } from '../../../_dialogs/dialog-delete.component';\nimport { AlertsService } from 'angular-alert-module';\n\n@Component({\n    selector: 'app-admin-user-detail',\n    templateUrl: './admin-user-detail.component.html',\n    styleUrls: ['./admin-user-detail.component.css']\n})\nexport class AdminUserDetailComponent implements OnInit {\n\n    thisForm: FormGroup;\n    data:any = [];\n\n    currentPassword : string = '';\n    \n    constructor(private router: Router, private route: ActivatedRoute, private api: ApiService, private formBuilder: FormBuilder, public dialog: MatDialog, private alerts: AlertsService) { }\n    \n    ngOnInit() {\n        // Create form\n        this.thisForm = this.formBuilder.group({\n            'blocked': [null],\n            'approved': [null],\n            'firstname': [null, Validators.maxLength(50)],\n            'lastname' : [null, Validators.maxLength(50)],\n            'email' : [null, [Validators.required, Validators.email, Validators.maxLength(256)]],\n            'password': [null]\n        });\n\n        // Get data\n        this.getData(this.route.snapshot.params['id']);\n    }\n    get f() { return this.thisForm.controls; }\n    \n    // Get data via API\n    getData(id) {\n        this.api.getUser(id).subscribe(resp => {\n\n            // Error\n            if (resp['success'] !== undefined && resp['success'] == false){\n                this.alerts.setMessage(resp['msg'], 'error');\n                this.router.navigate(['/admin/users']);\n            }\n            // Error\n            if (resp['data'] == undefined || !Object.keys(resp['data']).length ){\n                this.alerts.setMessage('Error fetching data', 'error');\n                this.router.navigate(['/admin/users']);\n            }\n\n            // Save a copy of the data to be used locally\n            this.data = resp['data'];\n\n            // Save a copy of the current password\n            this.currentPassword = resp['data'].password;\n            \n            // Update the form values\n            this.thisForm.setValue({\n                blocked: (resp['data'].blocked !== undefined && resp['data'].blocked) ? resp['data'].blocked : false,\n                approved: (resp['data'].approved !== undefined && resp['data'].approved) ? resp['data'].approved : false,\n                firstname: (resp['data'].firstname !== undefined && resp['data'].firstname) ? resp['data'].firstname : false,\n                lastname: (resp['data'].lastname !== undefined && resp['data'].lastname) ? resp['data'].lastname : '',\n                email: (resp['data'].email !== undefined && resp['data'].email) ? resp['data'].email : '',\n                password: ''\n            });\n        },\n        err =>{\n            if(err['status'] == 401) {\n                localStorage.clear();\n                this.router.navigate(['/user/login']);\n            }\n        }\n        );\n    }\n    \n    // Form submit\n    onFormSubmit(form:NgForm) {\n\n        // Update user via API\n        this.api.putUser(this.data['_id'], form).subscribe(resp => {\n\n            // Ok\n            if (resp['success'] !== undefined && resp['success'] == true) {\n                this.alerts.setMessage(resp['msg'],'success');\n            }\n\n            // Error\n            else{\n                let error = ('error' in resp) ? resp['error'] : '';\n                let errorMsg = ('msg' in resp) ? resp['msg'] : '';\n\n                // Duplicate unique fields\n                if ( error && error.code == 11000 ){\n                    var errorField = '';\n                    for (var fieldKey in error.field){\n                        errorField = fieldKey;\n                    }\n\n                    this.alerts.setMessage('Field must be unique: ' + errorField, 'error');\n                }\n\n                // Error message is available\n                else if ( errorMsg ){\n                    this.alerts.setMessage(errorMsg, 'error');\n                }\n                else{\n                    this.alerts.setMessage('Error', 'error');\n                }\n            }\n        },\n        err =>{\n            if(err['status'] == 401) {\n                localStorage.clear();\n                this.router.navigate(['/user/login']);\n            }\n        }\n        );\n    }\n    \n    // Delete entry\n    deleteEntry() {\n        const dialogRef = this.dialog.open(DialogDeleteComponent);\n        \n        dialogRef.afterClosed().subscribe(result => {\n            if (result !== undefined && result == true ){\n\n                // Call the API to delete the user\n                this.api.deleteUser(this.data['_id'])\n                .subscribe(resp => {\n                    \n                    // Success\n                    if (resp['success'] !== undefined && resp['success'] == true){\n                        this.alerts.setMessage(resp['msg'], 'success');\n                        this.router.navigate(['/admin/users']);\n                    }\n\n                    // Error\n                    else\n                        this.alerts.setMessage(resp['msg'], 'error');\n                },\n                err =>{\n                    if(err['status'] == 401) {\n                        localStorage.clear();\n                        this.router.navigate(['/user/login']);\n                    }\n                }\n                );\n            }\n        });\n    }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"button-row\\\">\\n        <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/admin/users/create']\\\"><mat-icon>add</mat-icon></a>\\n    </div>\\n    <div class=\\\"example-container mat-elevation-z8\\\">\\n        <table mat-table #table matSort [dataSource]=\\\"dataSource\\\">\\n            \\n            <ng-container matColumnDef=\\\"edit\\\">\\n                <th mat-header-cell *matHeaderCellDef>Edit</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">\\n                    <a mat-icon-button color=\\\"primary\\\" [routerLink]=\\\"['/admin', 'users',element._id,'detail']\\\">\\n                        <mat-icon class=\\\"mat-18\\\">edit</mat-icon>\\n                    </a>\\n                </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"blocked\\\">\\n                <th mat-header-cell *matHeaderCellDef>blocked</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">{{element.blocked}} </td>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"firstname\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>firstname</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">{{element.firstname}}</td>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"lastname\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>lastname</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">{{element.lastname}}</td>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"email\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>email</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">{{element.email}}</td>\\n            </ng-container>\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n        </table>\\n    </div>\\n</div>\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\n\nimport { ApiService } from '../../../_services/api.service';\n\n@Component({\n    selector: 'app-admin-user-list',\n    templateUrl: './admin-user-list.component.html',\n    styleUrls: ['./admin-user-list.component.css']\n})\nexport class AdminUserListComponent implements OnInit {\n    // Columns to display\n    displayedColumns = [\n    'edit',\n    'blocked',\n    'firstname',\n    'lastname',\n    'email'\n    ];\n\n    // Source for the table data\n    dataSource = new MatTableDataSource<Element>();\n    @ViewChild(MatSort) sort: MatSort;\n\n    constructor(private api: ApiService, private router : Router) { }\n    \n    ngOnInit() {\n        // Provide sorting to the data source\n        this.dataSource.sort = this.sort;\n\n        // Get the data\n        this.api.getUsers().subscribe(resp => {\n            // Populate the data source\n            if ( resp['success'] !== undefined && resp['success'] == true\n                && resp['data'] !== undefined ) {\n                this.dataSource.data = resp['data'];\n            }\n        },\n        err =>{\n            if(err['status'] == 401) {\n                localStorage.clear();\n                this.router.navigate(['/user/login']);\n            }\n        }\n        );\n    }\n}","// Generic imports\nimport { NgModule }       from '@angular/core';\nimport { CommonModule }   from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AlertsModule } from 'angular-alert-module';\nimport {\n    MatInputModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatSortModule,\n    MatTableModule,\n    MatGridListModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatCardModule,\n    MatDialogModule,\n    MatSelectModule,\nMatFormFieldModule } from \"@angular/material\";\n\n// Standard imports for all routes\nimport { DialogDeleteComponent } from '../_dialogs/dialog-delete.component';\nimport { AuthGuard } from '../_guards/auth-guard.service';\nimport { AdminGuard } from '../_guards/admin-guard.service';\nimport { CoreModule } from '../core/core.module';\n\n// Admin specific imports\nimport { AdminOutletComponent }       from './admin-outlet/admin-outlet.component';\nimport { AdminHomeComponent }       from './admin-home/admin-home.component';\nimport { AdminUserCreateComponent }     from './admin-user/admin-user-create/admin-user-create.component';\nimport { AdminUserListComponent }       from './admin-user/admin-user-list/admin-user-list.component';\nimport { AdminUserDetailComponent }     from './admin-user/admin-user-detail/admin-user-detail.component';\nimport { AdminOrganizationCreateComponent }     from './admin-organization/admin-organization-create/admin-organization-create.component';\nimport { AdminRoutingModule } from './admin-routing.module';\n\n@NgModule({\n    imports: [\n        AdminRoutingModule,\n        BrowserModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        BrowserAnimationsModule,\n        CoreModule,\n        MatInputModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatSortModule,\n        MatProgressSpinnerModule,\n        MatIconModule,\n        MatGridListModule,\n        MatDialogModule,\n        MatCheckboxModule,\n        MatButtonModule,\n        MatCardModule,\n        MatSelectModule,\n        MatFormFieldModule\n    ],\n    declarations: [\n        AdminOutletComponent,\n        AdminHomeComponent,\n        AdminUserCreateComponent,\n        AdminUserListComponent,\n        AdminUserDetailComponent,\n        AdminOrganizationCreateComponent\n    ],\n    providers: [\n        AuthGuard,\n        AdminGuard\n    ],\n    entryComponents: [DialogDeleteComponent]\n})\nexport class AdminModule {}","module.exports = \"\"","module.exports = \"<app-header></app-header>\\r\\n<app-alerts></app-alerts>\\r\\n<router-outlet></router-outlet>\\r\\n<app-footer></app-footer>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { MatDialogModule } from '@angular/material';\nimport { AlertsModule } from 'angular-alert-module';\n\nimport { CoreModule } from './core/core.module';\n\nimport { AuthGuard } from './_guards/auth-guard.service';\nimport { AdminGuard } from './_guards/admin-guard.service';\nimport { RedirectLoginGuard } from './_guards/redirect-login-guard.service';\n\nimport { DialogDeleteComponent } from './_dialogs/dialog-delete.component';\n\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\n// Modules\nimport { OrganizationModule } from './organization/organization.module';\nimport { ProjectModule } from './project/project.module';\nimport { ResourceModule } from './resource/resource.module';\nimport { UserModule } from './user/user.module';\nimport { RoleModule} from './role/role.module';\nimport { AdminModule} from './admin/admin.module';\n\nconst appRoutes: Routes = [\n{\n    path: 'dashboard',\n    component: DashboardComponent,\n    data: { title: 'Dashboard' },\n    canActivate: [AuthGuard]\n},\n{\n    path: '',\n    redirectTo: '/organizations',\n    pathMatch: 'full'\n},\n];\n\n@NgModule({\n    declarations: [\n    AppComponent,\n    DashboardComponent,\n    DialogDeleteComponent\n    ],\n    imports: [\n    RouterModule.forRoot(appRoutes),\n    AlertsModule.forRoot(),\n    BrowserModule,\n    HttpClientModule,\n    CoreModule,\n    BrowserAnimationsModule,\n    OrganizationModule,\n    ProjectModule,\n    ResourceModule,\n    UserModule,\n    RoleModule,\n    AdminModule,\n    MatDialogModule\n    ],\n    providers: [\n    AuthGuard,\n    AdminGuard,\n    RedirectLoginGuard\n    ],\n    bootstrap: [AppComponent],\n    entryComponents: [DialogDeleteComponent]\n})\nexport class AppModule {}","module.exports = \"\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <div class=\\\"container\\\">\\n        <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">{{siteTitle}}</a>\\n\\n        <button *ngIf=\\\"!this.hideMenu\\\" class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n            <span class=\\\"navbar-toggler-icon\\\"></span>\\n        </button>\\n\\n        <div *ngIf=\\\"!this.hideMenu\\\" class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n            <ul class=\\\"nav navbar-nav mr-auto\\\">\\n                <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n                    <a class=\\\"nav-link\\\" routerLink=\\\"/dashboard\\\">Dashboard</a>\\n                </li>\\n                <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n                    <a class=\\\"nav-link\\\" routerLink=\\\"/organizations\\\">Organizations</a>\\n                </li>\\n            </ul>\\n            <ul class=\\\"nav navbar-nav ml-auto\\\">\\n                <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n                    <a class=\\\"nav-link\\\" routerLink=\\\"/user/profile\\\">Profile</a>\\n                </li>\\n                <li *ngIf=\\\"this.isSuperAdmin\\\" class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n                    <a class=\\\"nav-link\\\" routerLink=\\\"/admin\\\">Admin</a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\" (click)=\\\"logout()\\\">Logout</a>\\n                </li>\\n            </ul>\\n        </div>\\n    </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../../../_services/auth.service';\n    \n@Component({\n    selector: 'app-header',\n    templateUrl: './header.component.html',\n    styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n    \n    hideMenu : boolean = false;\n    isSuperAdmin : boolean = false;\n    siteTitle : 'JenPlane';\n\n    constructor(private authService: AuthService, private router: Router, private route: ActivatedRoute) {}\n    \n    ngOnInit() {\n\n    \t// Hide menu for non-logged in users\n    \tif (!this.authService.isAuthenticated()){\n    \t\tthis.hideMenu = true;\n    \t}\n        // Show the admin link for the super admin\n        if (this.authService.isSuperAdmin()){\n            this.isSuperAdmin = true;\n        }\n    }\n    \n    logout(){\n        this.authService.logout();\n    }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { HeaderComponent } from './components/header/header.component';\nimport { FooterComponent } from './components/footer/footer.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule\n    ],\n    providers: [\n    ],\n    declarations: [\n        HeaderComponent,\n        FooterComponent\n    ],\n    exports: [\n        HeaderComponent,\n        FooterComponent\n    ],\n})\nexport class CoreModule { }","module.exports = \".button-row {\\r\\n  margin: 10px 0;\\r\\n}\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n    selector: 'app-dashboard',\n    templateUrl: './dashboard.component.html',\n    styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n    \n    constructor(private router: Router, private route: ActivatedRoute) {}\n    \n    ngOnInit() {\n    }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"button-row\\\">\\n        <a mat-raised-button color=\\\"primary\\\" routerLink=\\\"/organizations\\\"><mat-icon>list</mat-icon></a>\\n        <a mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteEntry()\\\"><mat-icon>delete_forever</mat-icon></a>\\n    </div>\\n    <form [formGroup]=\\\"thisForm\\\" (ngSubmit)=\\\"onFormSubmit(thisForm.value)\\\">\\n    \\n        <div class=\\\"button-row\\\">\\n            <button type=\\\"submit\\\" [disabled]=\\\"!thisForm.valid\\\" mat-raised-button color=\\\"primary\\\"><mat-icon>save</mat-icon></button>\\n        </div>\\n\\n        <div class=\\\"button-row\\\">\\n            <a *ngIf=\\\"!organizationLocked\\\" mat-raised-button color=\\\"warn\\\" (click)=\\\"lockEntry()\\\"><mat-icon>lock</mat-icon></a>\\n            <a *ngIf=\\\"organizationLocked\\\" mat-raised-button color=\\\"warn\\\" (click)=\\\"unlockEntry()\\\"><mat-icon>lock_open</mat-icon></a>\\n        </div>\\n\\n        <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput placeholder=\\\"Shortname\\\" formControlName=\\\"shortname\\\" [errorStateMatcher]=\\\"matcher\\\">\\n            <mat-error>\\n                <span *ngIf=\\\"f.shortname.touched && f.shortname.errors?.required\\\">Required</span>\\n                <span *ngIf=\\\"f.shortname.touched && f.shortname.errors?.maxlength\\\">Maximum of 20 characters</span>\\n                <span *ngIf=\\\"f.shortname.touched && f.shortname.errors?.pattern\\\">Only alphanumeric characters without spaces are allowed</span>\\n            </mat-error>\\n        </mat-form-field>\\n        \\n        <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput placeholder=\\\"Fullname\\\" formControlName=\\\"fullname\\\" [errorStateMatcher]=\\\"matcher\\\">\\n            <mat-error>\\n                <span *ngIf=\\\"f.fullname.touched && f.fullname.errors?.required\\\">Required</span>\\n                <span *ngIf=\\\"f.fullname.touched && f.fullname.errors?.maxlength\\\">Maximum of 256 characters</span>\\n            </mat-error>\\n        </mat-form-field>\\n        \\n        <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput type=\\\"email\\\" placeholder=\\\"Email\\\" formControlName=\\\"email\\\" [errorStateMatcher]=\\\"matcher\\\">\\n            <mat-error>\\n                <span *ngIf=\\\"f.email.touched && f.email.errors?.required\\\">Required</span>\\n                <span *ngIf=\\\"f.email.touched && f.email.errors?.email\\\">Invalid email</span>\\n                <span *ngIf=\\\"f.email.touched && f.email.errors?.maxlength\\\">Maximum of 256 characters</span>\\n            </mat-error>\\n        </mat-form-field>\\n        \\n        <mat-form-field class=\\\"example-full-width\\\">\\n            <textarea matInput placeholder=\\\"Description\\\" formControlName=\\\"description\\\" [errorStateMatcher]=\\\"matcher\\\">\\n            </textarea>\\n            <mat-error>\\n                <span *ngIf=\\\"f.description.touched && f.description.errors?.maxlength\\\">Maximum of 500 characters</span>\\n            </mat-error>\\n        </mat-form-field>\\n        \\n        <mat-form-field class=\\\"example-full-width\\\">\\n            <textarea matInput placeholder=\\\"Address\\\" formControlName=\\\"address\\\" [errorStateMatcher]=\\\"matcher\\\">\\n            </textarea>\\n            <mat-error>\\n                <span *ngIf=\\\"f.address.touched && f.address.errors?.maxlength\\\">Maximum of 500 characters</span>\\n            </mat-error>\\n        </mat-form-field>\\n        \\n        <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput type=\\\"tel\\\" placeholder=\\\"Phone\\\" formControlName=\\\"phone\\\" [errorStateMatcher]=\\\"matcher\\\">\\n            <mat-error>\\n                <span *ngIf=\\\"f.phone.touched && f.phone.errors?.maxlength\\\">Maximum of 50 characters</span>\\n            </mat-error>\\n        </mat-form-field>\\n        \\n        <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput placeholder=\\\"Country\\\" formControlName=\\\"country\\\" [errorStateMatcher]=\\\"matcher\\\">\\n            <mat-error>\\n                <span *ngIf=\\\"f.country.touched && f.country.errors?.maxlength\\\">Maximum of 50 characters</span>\\n            </mat-error>\\n        </mat-form-field>\\n        \\n        <div class=\\\"button-row\\\">\\n            <button type=\\\"submit\\\" [disabled]=\\\"!thisForm.valid\\\" mat-raised-button color=\\\"primary\\\"><mat-icon>save</mat-icon></button>\\n        </div>\\n    </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { ApiService } from '../../_services/api.service';\nimport { DialogDeleteComponent } from '../../_dialogs/dialog-delete.component';\nimport { AlertsService } from 'angular-alert-module';\n\n@Component({\n    selector: 'app-organization-detail',\n    templateUrl: './organization-detail.component.html',\n    styleUrls: ['./organization-detail.component.css']\n})\nexport class OrganizationDetailComponent implements OnInit {\n\n    thisForm: FormGroup;\n    organizationData = [];\n    organizationLocked = false;\n    \n    constructor(private router: Router, private route: ActivatedRoute,\n        private api: ApiService, private formBuilder: FormBuilder,\n        public dialog: MatDialog, private alerts: AlertsService) { }\n    \n    ngOnInit() {\n        // Get data\n        this.getData(this.route.snapshot.params['id']);\n        \n        // Create form\n        this.thisForm = this.formBuilder.group({\n            'shortname' : [null, [Validators.required, Validators.maxLength(20), Validators.pattern('[a-zA-Z0-9]*')]],\n            'fullname' : [null, [Validators.required, Validators.maxLength(256)]],\n            'email' : [null, [Validators.required, Validators.email, Validators.maxLength(256)]],\n            'description' : [null, Validators.maxLength(500)],\n            'address' : [null, Validators.maxLength(500)],\n            'phone' : [null, Validators.maxLength(50)],\n            'country' : [null, Validators.maxLength(50)]\n        });\n    }\n    get f() { return this.thisForm.controls; }\n    \n    // Get data via API\n    getData(id) {\n        this.api.getOrganization(id).subscribe(resp => {\n            \n            // Errors\n            if ( resp['success'] === undefined || resp['success'] == false ){\n                this.alerts.setMessage(resp['msg'], 'error');\n                this.router.navigate(['/organizations']);\n            }\n            else if ( resp['data'] === undefined || !Object.keys(resp['data']).length ){\n                this.alerts.setMessage('Error fetching data', 'error');\n                this.router.navigate(['/organizations']);\n            }\n\n            else{\n                // Save a copy of the data to be used locally\n                this.organizationData = resp['data'];\n\n                // Locked status\n                this.organizationLocked = (resp['data'].locked != null && resp['data'].locked == true) ? true : false;\n                \n                // Update the form values\n                this.thisForm.setValue({\n                    shortname: (resp['data'].shortname != null && resp['data'].shortname) ? resp['data'].shortname : '',\n                    fullname: (resp['data'].fullname != null && resp['data'].fullname) ? resp['data'].fullname : '',\n                    email: (resp['data'].email != null && resp['data'].email) ? resp['data'].email : '',\n                    description: (resp['data'].description != null && resp['data'].description) ? resp['data'].description : '',\n                    address: (resp['data'].address != null && resp['data'].address) ? resp['data'].address : '',\n                    phone: (resp['data'].phone != null && resp['data'].phone) ? resp['data'].phone : '',\n                    country: (resp['data'].country != null && resp['data'].country) ? resp['data'].country : ''\n                });\n            }\n        },\n        err => {\n            if(err['status'] == 401) {\n                localStorage.clear();\n                this.router.navigate(['/user/login']);\n            }\n        }\n        );\n    }\n    \n    // Form submit\n    onFormSubmit(form:NgForm) {\n\n        // Update via API\n        this.api.putOrganization(this.organizationData['_id'], form).subscribe(resp => {\n\n            // Ok\n            if (resp['success'] !== undefined && resp['success'] == true){\n                this.alerts.setMessage(resp['msg'], 'success');\n            }\n\n            // Fail\n            else{\n                let error = ('error' in resp) ? resp['error'] : '';\n                let errorMsg = ('msg' in resp) ? resp['msg'] : '';\n\n                // Duplicate unique fields\n                if ( error && error.code == 11000 ){\n                    var errorField = '';\n                    for (var fieldKey in error.field){\n                        errorField = fieldKey;\n                    }\n\n                    this.alerts.setMessage('Field must be unique: ' + errorField, 'error');\n                }\n\n                // Error message is available\n                else if ( errorMsg ){\n                    this.alerts.setMessage(errorMsg, 'error');\n                }\n            }\n        },\n        err => {\n            if(err['status'] == 401) {\n                localStorage.clear();\n                this.router.navigate(['/user/login']);\n            }\n        }\n        );\n    }\n\n    // Lock entry\n    lockEntry() {\n        const dialogRef = this.dialog.open(DialogDeleteComponent);\n        \n        dialogRef.afterClosed().subscribe(result => {\n            if (result !== undefined && result == true ){\n\n                // Call the API to delete the organization and its projects\n                this.api.lockOrganization(this.organizationData['_id'])\n                .subscribe(resp => {\n\n                    // Success\n                    if (resp['success'] !== undefined && resp['success'] == true){\n                        this.alerts.setMessage(resp['msg'], 'success');\n                        this.router.navigate(['/organizations']);\n                    }\n\n                    // Error\n                    else\n                        this.alerts.setMessage(resp['msg'], 'error');\n                    \n                }, err => {\n                    if(err['status'] == 401) {\n                        this.router.navigate(['/user/login']);\n                    }\n                });\n            }\n        });\n    }\n\n    // Unlock entry\n    unlockEntry() {\n        const dialogRef = this.dialog.open(DialogDeleteComponent);\n        \n        dialogRef.afterClosed().subscribe(result => {\n            if (result !== undefined && result == true ){\n\n                // Call the API to delete the organization and its projects\n                this.api.unlockOrganization(this.organizationData['_id'])\n                .subscribe(resp => {\n\n                    // Success\n                    if (resp['success'] !== undefined && resp['success'] == true){\n                        this.alerts.setMessage(resp['msg'], 'success');\n                        this.router.navigate(['/organizations']);\n                    }\n\n                    // Error\n                    else\n                        this.alerts.setMessage(resp['msg'], 'error');\n                    \n                }, err => {\n                    if(err['status'] == 401) {\n                        this.router.navigate(['/user/login']);\n                    }\n                });\n            }\n        });\n    }\n    \n    // Delete entry\n    deleteEntry() {\n        const dialogRef = this.dialog.open(DialogDeleteComponent);\n        \n        dialogRef.afterClosed().subscribe(result => {\n            if (result !== undefined && result == true ){\n\n                // Call the API to delete the organization and its projects\n                this.api.deleteOrganization(this.organizationData['_id'])\n                .subscribe(resp => {\n\n                    // Success\n                    if (resp['success'] !== undefined && resp['success'] == true){\n                        this.alerts.setMessage(resp['msg'], 'success');\n                        this.router.navigate(['/organizations']);\n                    }\n\n                    // Error\n                    else\n                        this.alerts.setMessage(resp['msg'], 'error');\n                    \n                }, err => {\n                    if(err['status'] == 401) {\n                        this.router.navigate(['/user/login']);\n                    }\n                });\n            }\n        });\n    }\n}","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-organization-home',\n    templateUrl: './organization-home.component.html',\n    styleUrls: ['./organization-home.component.css']\n})\nexport class OrganizationHomeComponent{}","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"example-container mat-elevation-z8\\\">\\n        <table mat-table #table matSort [dataSource]=\\\"dataSource\\\">\\n            \\n            <ng-container matColumnDef=\\\"edit\\\">\\n                <th mat-header-cell *matHeaderCellDef>Edit</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">\\n                    <a mat-icon-button color=\\\"primary\\\" [routerLink]=\\\"['/organizations',element._id,'detail']\\\">\\n                        <mat-icon class=\\\"mat-18\\\">edit</mat-icon>\\n                    </a>\\n                </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"editMembers\\\">\\n                <th mat-header-cell *matHeaderCellDef>Edit Members</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">\\n                    <a mat-icon-button color=\\\"primary\\\" [routerLink]=\\\"['/roles','org',element._id]\\\">\\n                        <mat-icon class=\\\"mat-18\\\">account_box</mat-icon>\\n                    </a>\\n                </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"editProjects\\\">\\n                <th mat-header-cell *matHeaderCellDef>Edit Projects</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">\\n                    <a mat-icon-button color=\\\"primary\\\" [routerLink]=\\\"['/projects','org',element._id]\\\">\\n                        <mat-icon class=\\\"mat-18\\\">widgets</mat-icon>\\n                    </a>\\n                </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"locked\\\">\\n                <th mat-header-cell *matHeaderCellDef>locked</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">{{element.locked}} </td>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"shortname\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>shortname</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">{{element.shortname}}</td>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"fullname\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>fullname</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">{{element.fullname}}</td>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"email\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>email</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">{{element.email}}</td>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"description\\\">\\n                <th mat-header-cell *matHeaderCellDef>description</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">{{element.description}}</td>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"address\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>address</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">{{element.address}}</td>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"phone\\\">\\n                <th mat-header-cell *matHeaderCellDef>phone</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">{{element.phone}}</td>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"country\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>country</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">{{element.country}}</td>\\n            </ng-container>\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n        </table>\\n</div>\\n</div>\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\n\nimport { ApiService } from '../../_services/api.service';\n\n@Component({\n    selector: 'app-organization-list',\n    templateUrl: './organization-list.component.html',\n    styleUrls: ['./organization-list.component.css']\n})\nexport class OrganizationListComponent implements OnInit {\n    // Columns to display\n    displayedColumns = [\n    'edit',\n    'editMembers',\n    'editProjects',\n    'locked',\n    'shortname',\n    'fullname'\n    ];\n\n    // Source for the table data\n    dataSource = new MatTableDataSource<Element>();\n    @ViewChild(MatSort) sort: MatSort;\n\n    constructor(private api: ApiService, private router : Router) { }\n    \n    ngOnInit() {\n        // Provide sorting to the data source\n        this.dataSource.sort = this.sort;\n\n        // Get the data\n        this.api.getOrganizations().subscribe(resp => {\n            // Populate the data source\n            if ( resp['success'] !== undefined && resp['success'] == true\n                && resp['data'] !== undefined) {\n                this.dataSource.data = resp['data'];\n            }\n        },\n        err =>{\n            if(err['status'] == 401) {\n                localStorage.clear();\n                this.router.navigate(['/user/login']);\n            }\n        }\n        );\n    }\n}","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { OrganizationHomeComponent } from './organization-home/organization-home.component';\nimport { OrganizationListComponent } from './organization-list/organization-list.component';\nimport { OrganizationDetailComponent } from './organization-detail/organization-detail.component';\n\nimport { AuthGuard } from '../_guards/auth-guard.service';\n\nconst routes: Routes = [\n    {\n        path: 'organizations',\n        component: OrganizationHomeComponent,\n        canActivate: [AuthGuard],\n        children: [\n            {\n                path: '',\n                component: OrganizationListComponent\n            },\n            {\n                path: ':id/detail',\n                component: OrganizationDetailComponent\n            }\n        ]\n    }\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes),\n    ],\n    exports: [\n        RouterModule\n    ]\n})\nexport class OrganizationRoutingModule {}","// Generic imports\nimport { NgModule }       from '@angular/core';\nimport { CommonModule }   from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AlertsModule } from 'angular-alert-module';\nimport {\n    MatInputModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatSortModule,\n    MatTableModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatCardModule,\n    MatDialogModule,\n    MatSelectModule,\nMatFormFieldModule } from '@angular/material';\n\n// Standard imports for all routes\nimport { DialogDeleteComponent } from '../_dialogs/dialog-delete.component';\nimport { AuthGuard } from '../_guards/auth-guard.service';\nimport { AdminGuard } from '../_guards/admin-guard.service';\nimport { CoreModule } from '../core/core.module';\n\n// Organization specific imports\nimport { OrganizationHomeComponent }       from './organization-home/organization-home.component';\nimport { OrganizationListComponent }       from './organization-list/organization-list.component';\nimport { OrganizationDetailComponent }     from './organization-detail/organization-detail.component';\nimport { OrganizationRoutingModule } from './organization-routing.module';\n\n@NgModule({\n    imports: [\n        OrganizationRoutingModule,\n        BrowserModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        BrowserAnimationsModule,\n        CoreModule,\n        MatInputModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatSortModule,\n        MatProgressSpinnerModule,\n        MatIconModule,\n        MatDialogModule,\n        MatCheckboxModule,\n        MatButtonModule,\n        MatCardModule,\n        MatSelectModule,\n        MatFormFieldModule\n    ],\n    declarations: [\n        OrganizationHomeComponent,\n        OrganizationListComponent,\n        OrganizationDetailComponent\n    ],\n    providers: [\n        AuthGuard,\n        AdminGuard\n    ],\n    entryComponents: [DialogDeleteComponent]\n})\nexport class OrganizationModule {}","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n            <form [formGroup]=\\\"thisForm\\\" (ngSubmit)=\\\"onFormSubmit(thisForm.value)\\\">\\n                \\n                <mat-toolbar>\\n                    <span>{{orgData?.fullname}} > Create Project</span>\\n                </mat-toolbar>\\n\\n                <div class=\\\"button-row\\\">\\n                    <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/projects', 'org', orgId]\\\"><mat-icon>list</mat-icon></a>\\n                </div>\\n\\n                <div class=\\\"button-row\\\">\\n                    <button type=\\\"submit\\\" [disabled]=\\\"!thisForm.valid\\\" mat-raised-button color=\\\"primary\\\"><mat-icon>save</mat-icon></button>\\n                </div>\\n                \\n                <mat-form-field class=\\\"example-full-width\\\">\\n                    <input matInput placeholder=\\\"shortname\\\" formControlName=\\\"shortname\\\" [errorStateMatcher]=\\\"matcher\\\">\\n                    <mat-error>\\n                        <div *ngIf=\\\"f.shortname.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.shortname.errors.required\\\">Required</div>\\n                            <div *ngIf=\\\"f.shortname.errors.maxlength\\\">Maximum 20 characters</div>\\n                        </div>\\n                    </mat-error>\\n                </mat-form-field>\\n\\n                <mat-form-field class=\\\"example-full-width\\\">\\n                    <input matInput placeholder=\\\"fullname\\\" formControlName=\\\"fullname\\\" [errorStateMatcher]=\\\"matcher\\\">\\n                    <mat-error>\\n                        <div *ngIf=\\\"f.fullname.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.fullname.errors.required\\\">Required</div>\\n                            <div *ngIf=\\\"f.fullname.errors.maxlength\\\">Maximum 256 characters</div>\\n                        </div>\\n                    </mat-error>\\n                </mat-form-field>\\n\\n                <mat-form-field class=\\\"example-full-width\\\">\\n                    <textarea matInput placeholder=\\\"Description\\\" formControlName=\\\"description\\\" [errorStateMatcher]=\\\"matcher\\\">\\n                    </textarea>\\n                    <mat-error>\\n                        <div *ngIf=\\\"f.description.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.description.errors.maxlength\\\">Maximum 500 characters</div>\\n                        </div>\\n                    </mat-error>\\n                </mat-form-field>\\n\\n                <div class=\\\"button-row\\\">\\n                    <button type=\\\"submit\\\" [disabled]=\\\"!thisForm.valid\\\" mat-raised-button color=\\\"primary\\\"><mat-icon>save</mat-icon></button>\\n                </div>\\n\\n            </form>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\n\nimport { AlertsService } from 'angular-alert-module';\nimport { ApiService } from '../../_services/api.service';\n\n@Component({\n    selector: 'app-project-create',\n    templateUrl: './project-create.component.html',\n    styleUrls: ['./project-create.component.css']\n})\nexport class ProjectCreateComponent implements OnInit {\n    thisForm: FormGroup;\n\n    // The organization\n    orgData : any = '';\n    orgId : string = '';\n    \n    constructor(private router: Router, private route: ActivatedRoute,\n        private api: ApiService, private formBuilder: FormBuilder,\n        private alerts: AlertsService) {\n\n        // Organization ID from the URL Params\n        this.orgId = route.snapshot.params.orgId;\n    }\n    \n    ngOnInit() {\n        // Create form\n        this.thisForm = this.formBuilder.group({\n            'shortname' : [null, [Validators.required, Validators.maxLength(20)]],\n            'fullname' : [null, [Validators.required, Validators.maxLength(256)]],\n            'description' : [null, Validators.maxLength(500)]\n        });\n\n        // Validate the organization\n        this.api.getOrganization(this.orgId).subscribe(resp => {\n            // Errors\n            if ( resp['success'] === undefined || resp['success'] == false ){\n                this.alerts.setMessage(resp['msg'], 'error');\n                this.router.navigate(['/organizations']);\n            }\n            else if ( resp['data'] === undefined || !Object.keys(resp['data']).length ){\n                this.alerts.setMessage('Error fetching data', 'error');\n                this.router.navigate(['/organizations']);\n            }\n\n            else{\n                // Save the organization data locally\n                this.orgData = resp['data'];\n            }\n        },\n        err =>{\n            if(err['status'] == 401) {\n                localStorage.clear();\n                this.router.navigate(['/user/login']);\n            }\n        }\n        );\n    }\n    get f() { return this.thisForm.controls; }\n    \n    onFormSubmit(form:NgForm) {\n        this.api.postProject(this.orgId, form).subscribe(resp => {\n\n            // Ok\n            if (resp['success'] !== undefined && resp['success'] == true) {\n                this.alerts.setMessage(resp['msg'],'success');\n            }\n\n            // Error\n            else{\n                let error = ('error' in resp) ? resp['error'] : '';\n                let errorMsg = ('msg' in resp) ? resp['msg'] : '';\n\n                // Duplicate unique fields\n                if ( error && error.code == 11000 ){\n                    var errorField = ';'\n                    for (var fieldKey in error.field){\n                        errorField = fieldKey;\n                    }\n\n                    this.alerts.setMessage('Field must be unique: ' + errorField, 'error');\n                }\n\n                // Error message is available\n                else if ( errorMsg ){\n                    this.alerts.setMessage(errorMsg, 'error');\n                }\n            }\n            \n            this.router.navigate(['/projects/org/' + this.orgId]);\n        },\n        err =>{\n            if(err['status'] == 401) {\n                localStorage.clear();\n                this.router.navigate(['/user/login']);\n            }\n        }\n        );\n    }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n            <form [formGroup]=\\\"thisForm\\\" (ngSubmit)=\\\"onFormSubmit(thisForm.value)\\\">\\n                \\n                <mat-toolbar>\\n                    <span>{{orgData?.fullname}} > Edit Project</span>\\n                </mat-toolbar>\\n\\n\\t\\t\\t\\t<div class=\\\"button-row\\\">\\n\\t\\t\\t\\t\\t<a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/projects','org', orgData?._id]\\\"><mat-icon>list</mat-icon></a>\\n\\t\\t\\t\\t\\t<a mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteEntry()\\\"><mat-icon>delete_forever</mat-icon></a>\\n\\t\\t\\t\\t</div>\\n\\n                <div class=\\\"button-row\\\">\\n                    <button type=\\\"submit\\\" [disabled]=\\\"!thisForm.valid\\\" mat-raised-button color=\\\"primary\\\"><mat-icon>save</mat-icon></button>\\n                </div>\\n\\n                <div class=\\\"button-row\\\">\\n                    <a *ngIf=\\\"!projectLocked\\\" mat-raised-button color=\\\"warn\\\" (click)=\\\"lockEntry()\\\"><mat-icon>lock</mat-icon></a>\\n                    <a *ngIf=\\\"projectLocked\\\" mat-raised-button color=\\\"warn\\\" (click)=\\\"unlockEntry()\\\"><mat-icon>lock_open</mat-icon></a>\\n                </div>\\n                \\n                <mat-form-field class=\\\"example-full-width\\\">\\n                    <input matInput placeholder=\\\"shortname\\\" formControlName=\\\"shortname\\\" [errorStateMatcher]=\\\"matcher\\\">\\n                    <mat-error>\\n                        <div *ngIf=\\\"f.shortname.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.shortname.errors.required\\\">Required</div>\\n                            <div *ngIf=\\\"f.shortname.errors.maxlength\\\">Maximum 20 characters</div>\\n                        </div>\\n                    </mat-error>\\n                </mat-form-field>\\n\\n                <mat-form-field class=\\\"example-full-width\\\">\\n                    <input matInput placeholder=\\\"fullname\\\" formControlName=\\\"fullname\\\" [errorStateMatcher]=\\\"matcher\\\">\\n                    <mat-error>\\n                        <div *ngIf=\\\"f.fullname.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.fullname.errors.required\\\">Required</div>\\n                            <div *ngIf=\\\"f.fullname.errors.maxlength\\\">Maximum 256 characters</div>\\n                        </div>\\n                    </mat-error>\\n                </mat-form-field>\\n\\n                <mat-form-field class=\\\"example-full-width\\\">\\n                    <textarea matInput placeholder=\\\"Description\\\" formControlName=\\\"description\\\" [errorStateMatcher]=\\\"matcher\\\">\\n                    </textarea>\\n                    <mat-error>\\n                        <div *ngIf=\\\"f.description.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.description.errors.maxlength\\\">Maximum 500 characters</div>\\n                        </div>\\n                    </mat-error>\\n                </mat-form-field>\\n\\n                <div class=\\\"button-row\\\">\\n                    <button type=\\\"submit\\\" [disabled]=\\\"!thisForm.valid\\\" mat-raised-button color=\\\"primary\\\"><mat-icon>save</mat-icon></button>\\n                </div>\\n\\n            </form>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport {MatDialog} from '@angular/material/dialog';\n\nimport { ApiService } from '../../_services/api.service';\nimport { DialogDeleteComponent } from '../../_dialogs/dialog-delete.component';\nimport { AlertsService } from 'angular-alert-module';\n\n@Component({\n    selector: 'app-project-detail',\n    templateUrl: './project-detail.component.html',\n    styleUrls: ['./project-detail.component.css']\n})\nexport class ProjectDetailComponent implements OnInit {\n\n    thisForm: FormGroup;\n    projectData = [];\n    orgData = [];\n    projectLocked = false;\n\n    constructor(private router: Router, private route: ActivatedRoute, private api: ApiService, private formBuilder: FormBuilder, public dialog: MatDialog, private alerts: AlertsService) { }\n    \n    ngOnInit() {\n        // Create form\n        this.thisForm = this.formBuilder.group({\n            'shortname' : [null, [Validators.required, Validators.maxLength(20), Validators.pattern('[a-zA-Z0-9]*')]],\n            'fullname' : [null, [Validators.required, Validators.maxLength(256)]],\n            'description' : [null, Validators.maxLength(500)]\n        });\n        \n        // Get project data\n        this.api.getProject(this.route.snapshot.params['id']).subscribe(resp => {\n\n            if ( resp['success'] === undefined || resp['success'] == false ){\n                this.alerts.setMessage(resp['msg'], 'error');\n                this.router.navigate(['/organizations']);\n            }\n            else if ( resp['data'] === undefined || !Object.keys(resp['data']).length ){\n                this.alerts.setMessage('Error fetching data', 'error');\n                this.router.navigate(['/organizations']);\n            }\n            else if ( resp['data']['organization'] === undefined\n                || !Object.keys(resp['data']['organization']).length ){\n                this.alerts.setMessage('Error fetching data', 'error');\n                this.router.navigate(['/organizations']);\n            }\n\n            else{\n                // Save the data locally\n                this.projectData = resp['data'];\n\n                // Locked status\n                this.projectLocked = (resp['data'].locked != null && resp['data'].locked == true) ? true : false;\n\n                // Save the organization locally\n                this.orgData = resp['data']['organization'];\n\n                // Update the form values\n                this.thisForm.setValue({\n                    shortname: (resp['data'].shortname !== undefined && resp['data'].shortname) ? resp['data'].shortname : '',\n                    fullname: (resp['data'].fullname !== undefined && resp['data'].fullname) ? resp['data'].fullname : '',\n                    description: (resp['data'].description !== undefined && resp['data'].description) ? resp['data'].description : ''\n                });\n            }\n        },\n        err =>{\n            if(err['status'] == 401) {\n                localStorage.clear();\n                this.router.navigate(['/user/login']);\n            }\n        }\n        );\n    }\n    get f() { return this.thisForm.controls; }\n    \n    // Form submit\n    onFormSubmit(form:NgForm) {\n        // Update project via API\n        this.api.putProject(this.projectData['_id'], form).subscribe(resp => {\n\n            // Ok\n            if ( resp['success'] !== undefined && resp['success'] == true ){\n                this.alerts.setMessage(resp['msg'],'success');\n            }\n\n            // Fail\n            else{\n                let error = ('error' in resp) ? resp['error'] : '';\n                let errorMsg = ('msg' in resp) ? resp['msg'] : '';\n\n                // Duplicate unique fields\n                if ( error && error.code == 11000 ){\n                    var errorField = '';\n                    for (var fieldKey in error.field){\n                        errorField = fieldKey;\n                    }\n\n                    this.alerts.setMessage('Field must be unique: ' + errorField, 'error');\n                }\n\n                // Error message is available\n                else if ( errorMsg ){\n                    this.alerts.setMessage(errorMsg, 'error');\n                }\n            }\n        },\n        err => {\n            if(err['status'] == 401) {\n                localStorage.clear();\n                this.router.navigate(['/user/login']);\n            }\n        }\n        );\n    }\n\n    // Delete entry\n    deleteEntry() {\n        const dialogRef = this.dialog.open(DialogDeleteComponent);\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result != null && result == true ){\n\n                this.api.deleteProject(this.projectData['_id']).subscribe(resp => {\n                    // Success\n                    if ( resp['success'] !== undefined && resp['success'] == true ){\n                        this.alerts.setMessage(resp['msg'], 'success');\n                        this.router.navigate(['/projects/org/' + this.orgData['_id']]);\n                    }\n\n                    // Error\n                    else{\n                        this.alerts.setMessage(resp['msg'], 'error');\n                    }\n                },\n                err =>{\n                    if(err['status'] == 401) {\n                        localStorage.clear();\n                        this.router.navigate(['/user/login']);\n                    }\n                }\n                );\n            }\n        });\n    }\n\n    // Lock entry\n    lockEntry() {\n        const dialogRef = this.dialog.open(DialogDeleteComponent);\n        \n        dialogRef.afterClosed().subscribe(result => {\n            if (result !== undefined && result == true ){\n\n                this.api.lockProject(this.projectData['_id'])\n                .subscribe(resp => {\n\n                    // Success\n                    if (resp['success'] !== undefined && resp['success'] == true){\n                        this.alerts.setMessage(resp['msg'], 'success');\n                        this.router.navigate(['/projects/org/' + this.orgData['_id']]);\n                    }\n\n                    // Error\n                    else\n                        this.alerts.setMessage(resp['msg'], 'error');\n                    \n                }, err => {\n                    if(err['status'] == 401) {\n                        this.router.navigate(['/user/login']);\n                    }\n                });\n            }\n        });\n    }\n\n    // Unlock entry\n    unlockEntry() {\n        const dialogRef = this.dialog.open(DialogDeleteComponent);\n        \n        dialogRef.afterClosed().subscribe(result => {\n            if (result !== undefined && result == true ){\n\n                this.api.unlockProject(this.projectData['_id'])\n                .subscribe(resp => {\n\n                    // Success\n                    if (resp['success'] !== undefined && resp['success'] == true){\n                        this.alerts.setMessage(resp['msg'], 'success');\n                        this.router.navigate(['/projects/org/' + this.orgData['_id']]);\n                    }\n\n                    // Error\n                    else\n                        this.alerts.setMessage(resp['msg'], 'error');\n                    \n                }, err => {\n                    if(err['status'] == 401) {\n                        this.router.navigate(['/user/login']);\n                    }\n                });\n            }\n        });\n    }\n    \n}","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-project-home',\n    templateUrl: './project-home.component.html',\n    styleUrls: ['./project-home.component.css']\n})\nexport class ProjectHomeComponent{}","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n\\n    <mat-toolbar>\\n        <span>{{orgData?.fullname}} > All Projects</span>\\n    </mat-toolbar>\\n\\n    <div class=\\\"button-row\\\">\\n        <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/projects','create',orgId]\\\"><mat-icon>add</mat-icon></a>\\n    </div>\\n\\n    <div class=\\\"example-container mat-elevation-z8\\\">\\n        <table mat-table #table matSort [dataSource]=\\\"dataSource\\\">\\n\\n            <ng-container matColumnDef=\\\"edit\\\">\\n                <th mat-header-cell *matHeaderCellDef>Edit</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">\\n                    <a mat-icon-button color=\\\"primary\\\" [routerLink]=\\\"['/projects',element._id]\\\">\\n                        <mat-icon class=\\\"mat-18\\\">edit</mat-icon>\\n                    </a>\\n                </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"editMembers\\\">\\n                <th mat-header-cell *matHeaderCellDef>Edit Members</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">\\n                    <a mat-icon-button color=\\\"primary\\\" [routerLink]=\\\"['/roles/project/',element._id]\\\">\\n                        <mat-icon class=\\\"mat-18\\\">account_box</mat-icon>\\n                    </a>\\n                </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"editResources\\\">\\n                <th mat-header-cell *matHeaderCellDef>Edit Resources</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">\\n                    <a mat-icon-button color=\\\"primary\\\" [routerLink]=\\\"['/resources/project/',element._id]\\\">\\n                        <mat-icon class=\\\"mat-18\\\">description</mat-icon>\\n                    </a>\\n                </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"locked\\\">\\n                <th mat-header-cell *matHeaderCellDef>locked</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">{{element.locked}}</td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"shortname\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>shortname</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">{{element.shortname}}</td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"fullname\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>fullname</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">{{element.fullname}}</td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"description\\\">\\n                <th mat-header-cell *matHeaderCellDef>description</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">{{element.description}}</td>\\n            </ng-container>\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n        </table>\\n    </div>\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AlertsService } from 'angular-alert-module';\n\nimport { ApiService } from '../../_services/api.service';\n\n@Component({\n    selector: 'app-project-list',\n    templateUrl: './project-list.component.html',\n    styleUrls: ['./project-list.component.css']\n})\nexport class ProjectListComponent implements OnInit {\n    // Columns to display\n    displayedColumns = [\n    'edit',\n    'editMembers',\n    'editResources',\n    'locked',\n    'shortname',\n    'fullname'\n    ];\n\n    // The organization\n    orgData : any = '';\n    orgId : string = '';\n\n    dataSource = new MatTableDataSource<Element>();\n    @ViewChild(MatSort) sort: MatSort;\n    \n    constructor(private api: ApiService, private route: ActivatedRoute,\n        private router: Router, private alerts: AlertsService) {\n        \n        // Organization ID from the URL Params\n        this.orgId = route.snapshot.params.orgId;\n    }\n    \n    ngOnInit() {\n        // Provide sorting to the data source\n        this.dataSource.sort = this.sort;\n\n        // Get the organization\n        this.api.getOrganization(this.orgId).subscribe(resp => {\n\n            if ( resp['success'] === undefined || resp['success'] == false ){\n                this.alerts.setMessage(resp['msg'], 'error');\n                this.router.navigate(['/organizations']);\n            }\n            else if ( resp['data'] === undefined || !Object.keys(resp['data']).length ){\n                this.alerts.setMessage('Error fetching data', 'error');\n                this.router.navigate(['/organizations']);\n            }\n\n            else{\n                // Save the organization locally\n                this.orgData = resp['data'];\n\n                // Get the organization's projects\n                this.api.getProjects(this.orgId).subscribe(resp => {\n\n                    // Populate the data source\n                    if ( resp['success'] !== undefined && resp['success'] == true\n                        && resp['data'] !== undefined) {\n                        this.dataSource.data = resp['data'];\n                    }\n                },\n                err =>{\n                    if(err['status'] == 401) {\n                        localStorage.clear();\n                        this.router.navigate(['/user/login']);\n                    }\n                }\n                );\n            }\n        },\n        err =>{\n            if(err['status'] == 401) {\n                localStorage.clear();\n                this.router.navigate(['/user/login']);\n            }\n        }\n        );\n    }\n}","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ProjectHomeComponent } from './project-home/project-home.component';\nimport { ProjectListComponent } from './project-list/project-list.component';\nimport { ProjectDetailComponent } from './project-detail/project-detail.component';\nimport { ProjectCreateComponent } from './project-create/project-create.component';\n\nimport { AuthGuard } from '../_guards/auth-guard.service';\n\nconst routes: Routes = [\n    {\n        path: 'projects',\n        component: ProjectHomeComponent,\n        canActivate: [AuthGuard],\n        children: [\n            {\n                path: '',\n                component: ProjectListComponent\n            },\n            {\n                path: 'create/:orgId',\n                component: ProjectCreateComponent\n            },\n            {\n                path: ':id',\n                component: ProjectDetailComponent\n            },\n            {\n                path: 'org/:orgId',\n                component: ProjectListComponent\n            }\n        ]\n    }\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes),\n    ],\n    exports: [\n        RouterModule\n    ]\n})\nexport class ProjectRoutingModule { }","// Generic imports\nimport { NgModule }       from '@angular/core';\nimport { CommonModule }   from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AlertsModule } from 'angular-alert-module';\nimport {\n    MatInputModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatSortModule,\n    MatTableModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatCardModule,\n    MatDialogModule,\n    MatToolbarModule,\n    MatProgressBarModule,\n    MatSelectModule,\nMatFormFieldModule } from '@angular/material';\n\n// Standard imports for all routes\nimport { DialogDeleteComponent } from '../_dialogs/dialog-delete.component';\nimport { AuthGuard } from '../_guards/auth-guard.service';\nimport { AdminGuard } from '../_guards/admin-guard.service';\nimport { CoreModule } from '../core/core.module';\n\n// Project specific imports\nimport { ProjectHomeComponent }       from './project-home/project-home.component';\nimport { ProjectCreateComponent }     from './project-create/project-create.component';\nimport { ProjectListComponent }       from './project-list/project-list.component';\nimport { ProjectDetailComponent }     from './project-detail/project-detail.component';\nimport { ProjectRoutingModule } from './project-routing.module';\n\n@NgModule({\n    imports: [\n        ProjectRoutingModule,\n        BrowserModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        BrowserAnimationsModule,\n        CoreModule,\n        MatInputModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatSortModule,\n        MatProgressSpinnerModule,\n        MatIconModule,\n        MatDialogModule,\n        MatCheckboxModule,\n        MatToolbarModule,\n        MatButtonModule,\n        MatCardModule,\n        MatSelectModule,\n        MatFormFieldModule,\n        MatProgressBarModule,\n    ],\n    declarations: [\n        ProjectHomeComponent,\n        ProjectCreateComponent,\n        ProjectListComponent,\n        ProjectDetailComponent\n    ],\n    providers: [\n        AuthGuard,\n        AdminGuard\n    ],\n    entryComponents: [DialogDeleteComponent]\n})\nexport class ProjectModule {}","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n            <form [formGroup]=\\\"thisForm\\\" (ngSubmit)=\\\"onFormSubmit(thisForm.value)\\\">\\n                \\n                <mat-toolbar>\\n                    <span>{{projectData?.fullname}} > Create Resource</span>\\n                </mat-toolbar>\\n\\n                <div class=\\\"button-row\\\">\\n                    <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/resources', 'project', projectId]\\\"><mat-icon>list</mat-icon></a>\\n                </div>\\n\\n                <div class=\\\"button-row\\\">\\n                    <button type=\\\"submit\\\" [disabled]=\\\"!thisForm.valid\\\" mat-raised-button color=\\\"primary\\\"><mat-icon>save</mat-icon></button>\\n                </div>\\n                \\n                <mat-form-field class=\\\"example-full-width\\\">\\n                    <input matInput placeholder=\\\"shortname\\\" formControlName=\\\"shortname\\\" [errorStateMatcher]=\\\"matcher\\\">\\n                    <mat-error>\\n                        <div *ngIf=\\\"f.shortname.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.shortname.errors.required\\\">Required</div>\\n                            <div *ngIf=\\\"f.shortname.errors.maxlength\\\">Maximum 20 characters</div>\\n                        </div>\\n                    </mat-error>\\n                </mat-form-field>\\n\\n                <mat-form-field class=\\\"example-full-width\\\">\\n                    <input matInput placeholder=\\\"fullname\\\" formControlName=\\\"fullname\\\" [errorStateMatcher]=\\\"matcher\\\">\\n                    <mat-error>\\n                        <div *ngIf=\\\"f.fullname.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.fullname.errors.required\\\">Required</div>\\n                            <div *ngIf=\\\"f.fullname.errors.maxlength\\\">Maximum 256 characters</div>\\n                        </div>\\n                    </mat-error>\\n                </mat-form-field>\\n\\n                <mat-form-field class=\\\"example-full-width\\\">\\n                    <textarea matInput placeholder=\\\"Description\\\" formControlName=\\\"description\\\" [errorStateMatcher]=\\\"matcher\\\">\\n                    </textarea>\\n                    <mat-error>\\n                        <div *ngIf=\\\"f.description.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.description.errors.maxlength\\\">Maximum 500 characters</div>\\n                        </div>\\n                    </mat-error>\\n                </mat-form-field>\\n\\n                <div class=\\\"button-row\\\">\\n                    <button type=\\\"submit\\\" [disabled]=\\\"!thisForm.valid\\\" mat-raised-button color=\\\"primary\\\"><mat-icon>save</mat-icon></button>\\n                </div>\\n\\n            </form>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\n\nimport { AlertsService } from 'angular-alert-module';\nimport { ApiService } from '../../_services/api.service';\n\n@Component({\n    selector: 'app-resource-create',\n    templateUrl: './resource-create.component.html',\n    styleUrls: ['./resource-create.component.css']\n})\nexport class ResourceCreateComponent implements OnInit {\n    thisForm: FormGroup;\n\n    // The project\n    projectData : any = '';\n    projectId : string = '';\n    \n    constructor(private router: Router, private route: ActivatedRoute,\n        private api: ApiService, private formBuilder: FormBuilder,\n        private alerts: AlertsService) {\n\n        // Project ID from the URL Params\n        this.projectId = route.snapshot.params.projectId;\n    }\n    \n    ngOnInit() {\n        // Create form\n        this.thisForm = this.formBuilder.group({\n            'shortname' : [null, [Validators.required, Validators.maxLength(20)]],\n            'fullname' : [null, [Validators.required, Validators.maxLength(256)]],\n            'description' : [null, Validators.maxLength(500)]\n        });\n\n        // Validate the project\n        this.api.getProject(this.projectId).subscribe(resp => {\n            // Errors\n            if ( resp['success'] === undefined || resp['success'] == false ){\n                this.alerts.setMessage(resp['msg'], 'error');\n                this.router.navigate(['/organizations']);\n            }\n            else if ( resp['data'] === undefined || !Object.keys(resp['data']).length ){\n                this.alerts.setMessage('Error fetching data', 'error');\n                this.router.navigate(['/organizations']);\n            }\n\n            else{\n                // Save the project data locally\n                this.projectData = resp['data'];\n            }\n        },\n        err =>{\n            if(err['status'] == 401) {\n                localStorage.clear();\n                this.router.navigate(['/user/login']);\n            }\n        }\n        );\n    }\n    get f() { return this.thisForm.controls; }\n    \n    onFormSubmit(form:NgForm) {\n        this.api.postResource(this.projectId, form).subscribe(resp => {\n\n            // Ok\n            if (resp['success'] !== undefined && resp['success'] == true) {\n                this.alerts.setMessage(resp['msg'],'success');\n            }\n\n            // Error\n            else{\n                let error = ('error' in resp) ? resp['error'] : '';\n                let errorMsg = ('msg' in resp) ? resp['msg'] : '';\n\n                // Duplicate unique fields\n                if ( error && error.code == 11000 ){\n                    var errorField = ';'\n                    for (var fieldKey in error.field){\n                        errorField = fieldKey;\n                    }\n\n                    this.alerts.setMessage('Field must be unique: ' + errorField, 'error');\n                }\n\n                // Error message is available\n                else if ( errorMsg ){\n                    this.alerts.setMessage(errorMsg, 'error');\n                }\n            }\n            \n            this.router.navigate(['/resources/project/' + this.projectId]);\n        },\n        err =>{\n            if(err['status'] == 401) {\n                localStorage.clear();\n                this.router.navigate(['/user/login']);\n            }\n        }\n        );\n    }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n            <form [formGroup]=\\\"thisForm\\\" (ngSubmit)=\\\"onFormSubmit(thisForm.value)\\\">\\n                \\n                <mat-toolbar>\\n                    <span>{{projectData?.fullname}} > Edit Resource</span>\\n                </mat-toolbar>\\n\\n\\t\\t\\t\\t<div class=\\\"button-row\\\">\\n\\t\\t\\t\\t\\t<a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/resources','project', projectData?._id]\\\"><mat-icon>list</mat-icon></a>\\n\\t\\t\\t\\t\\t<a mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteEntry()\\\"><mat-icon>delete_forever</mat-icon></a>\\n\\t\\t\\t\\t</div>\\n\\n                <div class=\\\"button-row\\\">\\n                    <button type=\\\"submit\\\" [disabled]=\\\"!thisForm.valid\\\" mat-raised-button color=\\\"primary\\\"><mat-icon>save</mat-icon></button>\\n                </div>\\n                \\n                <mat-form-field class=\\\"example-full-width\\\">\\n                    <input matInput placeholder=\\\"shortname\\\" formControlName=\\\"shortname\\\" [errorStateMatcher]=\\\"matcher\\\">\\n                    <mat-error>\\n                        <div *ngIf=\\\"f.shortname.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.shortname.errors.required\\\">Required</div>\\n                            <div *ngIf=\\\"f.shortname.errors.maxlength\\\">Maximum 20 characters</div>\\n                        </div>\\n                    </mat-error>\\n                </mat-form-field>\\n\\n                <mat-form-field class=\\\"example-full-width\\\">\\n                    <input matInput placeholder=\\\"fullname\\\" formControlName=\\\"fullname\\\" [errorStateMatcher]=\\\"matcher\\\">\\n                    <mat-error>\\n                        <div *ngIf=\\\"f.fullname.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.fullname.errors.required\\\">Required</div>\\n                            <div *ngIf=\\\"f.fullname.errors.maxlength\\\">Maximum 256 characters</div>\\n                        </div>\\n                    </mat-error>\\n                </mat-form-field>\\n\\n                <mat-form-field class=\\\"example-full-width\\\">\\n                    <textarea matInput placeholder=\\\"Description\\\" formControlName=\\\"description\\\" [errorStateMatcher]=\\\"matcher\\\">\\n                    </textarea>\\n                    <mat-error>\\n                        <div *ngIf=\\\"f.description.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.description.errors.maxlength\\\">Maximum 500 characters</div>\\n                        </div>\\n                    </mat-error>\\n                </mat-form-field>\\n\\n                <div class=\\\"button-row\\\">\\n                    <button type=\\\"submit\\\" [disabled]=\\\"!thisForm.valid\\\" mat-raised-button color=\\\"primary\\\"><mat-icon>save</mat-icon></button>\\n                </div>\\n\\n            </form>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport {MatDialog} from '@angular/material/dialog';\n\nimport { ApiService } from '../../_services/api.service';\nimport { DialogDeleteComponent } from '../../_dialogs/dialog-delete.component';\nimport { AlertsService } from 'angular-alert-module';\n\n@Component({\n    selector: 'app-resource-detail',\n    templateUrl: './resource-detail.component.html',\n    styleUrls: ['./resource-detail.component.css']\n})\nexport class ResourceDetailComponent implements OnInit {\n\n    thisForm: FormGroup;\n    resourceData = [];\n    projectData = [];\n    \n    constructor(private router: Router, private route: ActivatedRoute,\n        private api: ApiService, private formBuilder: FormBuilder,\n        public dialog: MatDialog, private alerts: AlertsService) {\n    }\n    \n    ngOnInit() {\n        // Create form\n        this.thisForm = this.formBuilder.group({\n            'shortname' : [null, [Validators.required, Validators.maxLength(20), Validators.pattern('[a-zA-Z0-9]*')]],\n            'fullname' : [null, [Validators.required, Validators.maxLength(256)]],\n            'description' : [null, Validators.maxLength(500)]\n        });\n        \n        // Get resource data\n        this.api.getResource(this.route.snapshot.params['id']).subscribe(resp => {\n\n            if ( resp['success'] === undefined || resp['success'] == false ){\n                this.alerts.setMessage(resp['msg'], 'error');\n                this.router.navigate(['/organizations']);\n            }\n            else if ( resp['data'] === undefined || !Object.keys(resp['data']).length ){\n                this.alerts.setMessage('Error fetching data', 'error');\n                this.router.navigate(['/organizations']);\n            }\n\n            else{\n                // Save the data locally\n                this.resourceData = resp['data'];\n\n                // Save the project locally\n                this.projectData = resp['data']['project'];\n\n                // Update the form values\n                this.thisForm.setValue({\n                    shortname: (resp['data'].shortname !== undefined && resp['data'].shortname) ? resp['data'].shortname : '',\n                    fullname: (resp['data'].fullname !== undefined && resp['data'].fullname) ? resp['data'].fullname : '',\n                    description: (resp['data'].description !== undefined && resp['data'].description) ? resp['data'].description : ''\n                });\n            }\n        },\n        err =>{\n            if(err['status'] == 401) {\n                localStorage.clear();\n                this.router.navigate(['/user/login']);\n            }\n        }\n        );\n    }\n    get f() { return this.thisForm.controls; }\n    \n    // Form submit\n    onFormSubmit(form:NgForm) {\n        // Update project via API\n        this.api.putResource(this.resourceData['_id'], form).subscribe(resp => {\n\n            // Ok\n            if ( resp['success'] !== undefined && resp['success'] == true ){\n                this.alerts.setMessage(resp['msg'],'success');\n            }\n\n            // Fail\n            else{\n                let error = ('error' in resp) ? resp['error'] : '';\n                let errorMsg = ('msg' in resp) ? resp['msg'] : '';\n\n                // Duplicate unique fields\n                if ( error && error.code == 11000 ){\n                    var errorField = '';\n                    for (var fieldKey in error.field){\n                        errorField = fieldKey;\n                    }\n\n                    this.alerts.setMessage('Field must be unique: ' + errorField, 'error');\n                }\n\n                // Error message is available\n                else if ( errorMsg ){\n                    this.alerts.setMessage(errorMsg, 'error');\n                }\n            }\n        },\n        err => {\n            if(err['status'] == 401) {\n                localStorage.clear();\n                this.router.navigate(['/user/login']);\n            }\n        }\n        );\n    }\n\n    // Delete entry\n    deleteEntry() {\n        const dialogRef = this.dialog.open(DialogDeleteComponent);\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result != null && result == true ){\n\n                this.api.deleteResource(this.resourceData['_id']).subscribe(resp => {\n                    // Success\n                    if ( resp['success'] !== undefined && resp['success'] == true ){\n                        this.alerts.setMessage(resp['msg'], 'success');\n                        this.router.navigate(['/resources/project/' + this.projectData['_id']]);\n                    }\n\n                    // Error\n                    else{\n                        this.alerts.setMessage(resp['msg'], 'error');\n                    }\n                },\n                err =>{\n                    if(err['status'] == 401) {\n                        localStorage.clear();\n                        this.router.navigate(['/user/login']);\n                    }\n                }\n                );\n            }\n        });\n    }\n}","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-resource-home',\n    templateUrl: './resource-home.component.html',\n    styleUrls: ['./resource-home.component.css']\n})\nexport class ResourceHomeComponent{}","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n\\n    <mat-toolbar>\\n        <span>{{projectData?.fullname}} > All Resources</span>\\n    </mat-toolbar>\\n\\n    <div class=\\\"button-row\\\">\\n        <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/resources','create',projectId]\\\"><mat-icon>add</mat-icon></a>\\n    </div>\\n\\n    <div class=\\\"example-container mat-elevation-z8\\\">\\n        <table mat-table #table matSort [dataSource]=\\\"dataSource\\\">\\n\\n            <ng-container matColumnDef=\\\"edit\\\">\\n                <th mat-header-cell *matHeaderCellDef>Edit</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">\\n                    <a mat-icon-button color=\\\"primary\\\" [routerLink]=\\\"['/resources',element._id]\\\">\\n                        <mat-icon class=\\\"mat-18\\\">edit</mat-icon>\\n                    </a>\\n                </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"locked\\\">\\n                <th mat-header-cell *matHeaderCellDef>locked</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">{{element.locked}}</td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"shortname\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>shortname</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">{{element.shortname}}</td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"fullname\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>fullname</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">{{element.fullname}}</td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"description\\\">\\n                <th mat-header-cell *matHeaderCellDef>description</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">{{element.description}}</td>\\n            </ng-container>\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n        </table>\\n    </div>\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AlertsService } from 'angular-alert-module';\n\nimport { ApiService } from '../../_services/api.service';\n\n@Component({\n    selector: 'app-resource-list',\n    templateUrl: './resource-list.component.html',\n    styleUrls: ['./resource-list.component.css']\n})\nexport class ResourceListComponent implements OnInit {\n    // Columns to display\n    displayedColumns = [\n    'edit',\n    'locked',\n    'shortname',\n    'fullname'\n    ];\n\n    // The project\n    projectData : any = '';\n    projectId : string = '';\n\n    dataSource = new MatTableDataSource<Element>();\n    @ViewChild(MatSort) sort: MatSort;\n    \n    constructor(private api: ApiService, private route: ActivatedRoute,\n        private router: Router, private alerts: AlertsService) {\n        \n        // Project ID from the URL Params\n        this.projectId = route.snapshot.params.projectId;\n    }\n    \n    ngOnInit() {\n        // Provide sorting to the data source\n        this.dataSource.sort = this.sort;\n\n        // Get the project\n        this.api.getProject(this.projectId).subscribe(resp => {\n\n            if ( resp['success'] === undefined || resp['success'] == false ){\n                this.alerts.setMessage(resp['msg'], 'error');\n                this.router.navigate(['/organizations']);\n            }\n            else if ( resp['data'] === undefined || !Object.keys(resp['data']).length ){\n                this.alerts.setMessage('Error fetching data', 'error');\n                this.router.navigate(['/organizations']);\n            }\n\n            else{\n                // Save the project locally\n                this.projectData = resp['data'];\n\n                // Get the project's projects\n                this.api.getResources(this.projectId).subscribe(resp => {\n\n                    // Populate the data source\n                    if ( resp['success'] !== undefined && resp['success'] == true\n                        && resp['data'] !== undefined) {\n                        this.dataSource.data = resp['data'];\n                    }\n                },\n                err =>{\n                    if(err['status'] == 401) {\n                        localStorage.clear();\n                        this.router.navigate(['/user/login']);\n                    }\n                }\n                );\n            }\n        },\n        err =>{\n            if(err['status'] == 401) {\n                localStorage.clear();\n                this.router.navigate(['/user/login']);\n            }\n        }\n        );\n    }\n}","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ResourceHomeComponent } from './resource-home/resource-home.component';\nimport { ResourceListComponent } from './resource-list/resource-list.component';\nimport { ResourceDetailComponent } from './resource-detail/resource-detail.component';\nimport { ResourceCreateComponent } from './resource-create/resource-create.component';\n\nimport { AuthGuard } from '../_guards/auth-guard.service';\n\nconst routes: Routes = [\n    {\n        path: 'resources',\n        component: ResourceHomeComponent,\n        canActivate: [AuthGuard],\n        children: [\n            {\n                path: '',\n                component: ResourceListComponent\n            },\n            {\n                path: 'create/:projectId',\n                component: ResourceCreateComponent\n            },\n            {\n                path: ':id',\n                component: ResourceDetailComponent\n            },\n            {\n                path: 'project/:projectId',\n                component: ResourceListComponent\n            }\n        ]\n    }\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes),\n    ],\n    exports: [\n        RouterModule\n    ]\n})\nexport class ResourceRoutingModule { }","// Generic imports\nimport { NgModule }       from '@angular/core';\nimport { CommonModule }   from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AlertsModule } from 'angular-alert-module';\nimport {\n    MatInputModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatSortModule,\n    MatTableModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatCardModule,\n    MatDialogModule,\n    MatToolbarModule,\n    MatProgressBarModule,\n    MatSelectModule,\nMatFormFieldModule } from '@angular/material';\n\n// Standard imports for all routes\nimport { DialogDeleteComponent } from '../_dialogs/dialog-delete.component';\nimport { AuthGuard } from '../_guards/auth-guard.service';\nimport { AdminGuard } from '../_guards/admin-guard.service';\nimport { CoreModule } from '../core/core.module';\n\n// Resource specific imports\nimport { ResourceHomeComponent }       from './resource-home/resource-home.component';\nimport { ResourceCreateComponent }     from './resource-create/resource-create.component';\nimport { ResourceListComponent }       from './resource-list/resource-list.component';\nimport { ResourceDetailComponent }     from './resource-detail/resource-detail.component';\nimport { ResourceRoutingModule } from './resource-routing.module';\n\n@NgModule({\n    imports: [\n        ResourceRoutingModule,\n        BrowserModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        BrowserAnimationsModule,\n        CoreModule,\n        MatInputModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatSortModule,\n        MatProgressSpinnerModule,\n        MatIconModule,\n        MatDialogModule,\n        MatCheckboxModule,\n        MatButtonModule,\n        MatToolbarModule,\n        MatCardModule,\n        MatSelectModule,\n        MatFormFieldModule,\n        MatProgressBarModule,\n    ],\n    declarations: [\n        ResourceHomeComponent,\n        ResourceCreateComponent,\n        ResourceListComponent,\n        ResourceDetailComponent\n    ],\n    providers: [\n        AuthGuard,\n        AdminGuard\n    ],\n    entryComponents: [DialogDeleteComponent]\n})\nexport class ResourceModule {}","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n            <form [formGroup]=\\\"thisForm\\\" (ngSubmit)=\\\"onFormSubmit(thisForm.value)\\\">\\n\\n                <mat-toolbar>\\n                    <span>{{ roleModelType | titlecase}}</span>\\n                    <span>&nbsp;{{'| ' + roleModel?.fullname }} > Create Role</span>\\n                </mat-toolbar>\\n\\n                <div class=\\\"button-row\\\">\\n                    <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/roles', roleModelType, roleModelId]\\\"><mat-icon>list</mat-icon></a>\\n                </div>\\n\\n                <div class=\\\"button-row\\\">\\n                    <button type=\\\"submit\\\" [disabled]=\\\"!thisForm.valid\\\" mat-raised-button color=\\\"primary\\\"><mat-icon>save</mat-icon></button>\\n                </div>\\n\\n                <mat-form-field class=\\\"example-full-width\\\">\\n                    <mat-label>User</mat-label>\\n                    <mat-select formControlName=\\\"user\\\" [errorStateMatcher]=\\\"matcher\\\">\\n                        <mat-option *ngFor=\\\"let user of users\\\" [value]=\\\"user._id\\\">\\n                            {{ user.firstname  + ' ' + user.lastname}} \\n                        </mat-option>\\n                    </mat-select>\\n                    <mat-error>\\n                        <div *ngIf=\\\"f.user.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.user.errors.required\\\">Required</div>\\n                        </div>\\n                    </mat-error>\\n                </mat-form-field>\\n\\n                <mat-form-field class=\\\"example-full-width\\\">\\n                    <mat-label>Role</mat-label>\\n                    <mat-select formControlName=\\\"role\\\" [errorStateMatcher]=\\\"matcher\\\">\\n                        <mat-option *ngFor=\\\"let role of allowedRoles\\\" [value]=\\\"role.value\\\">\\n                            {{role.text}} \\n                        </mat-option>\\n                    </mat-select>\\n                    <mat-error>\\n                        <div *ngIf=\\\"f.role.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.role.errors.required\\\">Required</div>\\n                        </div>\\n                    </mat-error>\\n                </mat-form-field>\\n\\n            </form>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { AlertsService } from 'angular-alert-module';\n\nimport { ApiService } from '../../_services/api.service';\n\nimport { RoleDataService } from '../role-data.service';\n\n@Component({\n    selector: 'app-role-create',\n    templateUrl: './role-create.component.html',\n    styleUrls: ['./role-create.component.css']\n})\nexport class RoleCreateComponent implements OnInit {\n\n    thisForm: FormGroup;\n\n    // will contain all users data\n    users:any = [];\n\n    // will contain all allowed user roles\n    allowedRoles = [];\n\n    // Variables to host data about the queried model in the URL\n    roleModel : any = '';\n    roleModelType : string = '';\n    roleModelId : string = '';\n    \n    constructor(private roleDataService: RoleDataService, private router: Router,\n        private route: ActivatedRoute, private api: ApiService, private formBuilder: FormBuilder,\n        private alerts: AlertsService) {\n\n        // Check which model (organization, project) we are creating for\n        this.route.url.subscribe(params => {\n            // Is it an organization or a project\n            // Read from the url parameter\n            this.roleModelType = params[1].path;\n            this.roleModelId = params[2].path;\n        })\n    }\n\n    ngOnInit() {\n\n        // Get the allowed user roles\n        this.roleDataService.getAllowedRoles().subscribe(resp => {\n            this.allowedRoles = resp;\n        },\n        err =>{\n            if(err['status'] == 401) {\n                localStorage.clear();\n                this.router.navigate(['/user/login']);\n            }}\n        );\n\n        this.thisForm = this.formBuilder.group({\n            'user': [null, [Validators.required]],\n            'role' : [null, [Validators.required]]\n        });\n\n        // Get the queried model from the URL\n        // Creating a role for a user in either:\n        // - an organization\n        // - a project\n\n        // Get the queried project\n        if (this.roleModelType == 'project'){\n            this.api.getProject(this.roleModelId).subscribe(resp => {\n\n                // Errors\n                if ( resp['success'] === undefined || resp['success'] == false ){\n                    this.alerts.setMessage(resp['msg'], 'error');\n                    this.router.navigate(['/roles/' + this.roleModelType + '/' + this.roleModelId]);\n                }\n                else if ( resp['data'] === undefined || !Object.keys(resp['data']).length ){\n                    this.alerts.setMessage('Error fetching data', 'error');\n                    this.router.navigate(['/roles/' + this.roleModelType + '/' + this.roleModelId]);\n                }\n\n                else{\n                    // Save the data locally\n                    this.roleModel = resp['data'];\n                }\n            },\n            err => {\n                if(err['status'] == 401) {\n                    localStorage.clear();\n                    this.router.navigate(['/user/login']);\n                }\n\n                // else, some error\n                this.alerts.setMessage('Error', 'error');\n                this.router.navigate(['/roles/' + this.roleModelType + '/' + this.roleModelId]);\n            }\n            );\n        }\n\n        // Get the queried organization\n        else if (this.roleModelType == 'org') {\n\n            this.api.getOrganization(this.roleModelId).subscribe(resp => {\n\n                // Errors\n                if ( resp['success'] === undefined || resp['success'] == false ){\n                    this.alerts.setMessage(resp['msg'], 'error');\n                    this.router.navigate(['/roles/' + this.roleModelType + '/' + this.roleModelId]);\n                }\n                else if ( resp['data'] === undefined || !Object.keys(resp['data']).length ){\n                    this.alerts.setMessage('Error fetching data', 'error');\n                    this.router.navigate(['/roles/' + this.roleModelType + '/' + this.roleModelId]);\n                }\n\n                else{\n                    // Save the data locally\n                    this.roleModel = resp['data'];\n                }\n            },\n            err => {\n                if(err['status'] == 401) {\n                    localStorage.clear();\n                    this.router.navigate(['/user/login']);\n                }\n\n                // any other error\n                this.alerts.setMessage('Error', 'error');\n                this.router.navigate(['/roles/' + this.roleModelType + '/' + this.roleModelId]);\n            }\n            );\n        }\n\n        // Get all users to populate the dropdown control for users\n        this.api.getUsers().subscribe(resp => {\n\n            // Errors\n            if ( resp['success'] === undefined || resp['success'] == false ){\n                this.alerts.setMessage(resp['msg'], 'error');\n                this.router.navigate(['/roles/' + this.roleModelType + '/' + this.roleModelId]);\n            }\n            else if ( resp['data'] === undefined || !resp['data'].length ){\n                this.alerts.setMessage('No valid users found', 'error');\n                this.router.navigate(['/roles/' + this.roleModelType + '/' + this.roleModelId]);\n            }\n\n            else{\n                // Save the data locally\n                this.users = resp['data'];\n            }\n        },\n        err =>{\n            if(err['status'] == 401) {\n                localStorage.clear();\n                this.router.navigate(['/user/login']);\n            }}\n        );\n    }\n    get f() { return this.thisForm.controls; }\n\n    onFormSubmit(form:NgForm) {\n        this.api.postUserRole(this.roleModelType, this.roleModelId, form).subscribe(resp => {\n            \n            // Ok\n            if (resp['success'] !== undefined && resp['success'] == true){\n                this.alerts.setMessage(resp['msg'],'success');\n            }\n\n            // Error\n            else{\n                let error = ('error' in resp) ? resp['error'] : '';\n                let errorMsg = ('msg' in resp) ? resp['msg'] : '';\n\n                // Duplicate unique fields\n                if ( error && error.code == 11000 ){\n                    var errorField = '';\n                    for (var fieldKey in error.field){\n                        errorField = fieldKey;\n                    }\n\n                    this.alerts.setMessage('Field must be unique: ' + errorField, 'error');\n                }\n\n                // Error message is available\n                else if ( errorMsg ){\n                    this.alerts.setMessage(errorMsg, 'error');\n                }\n            }\n\n            this.router.navigate(['/roles/' + this.roleModelType + '/' + this.roleModelId]);\n        },\n        err =>{\n            if(err['status'] == 401) {\n                localStorage.clear();\n                this.router.navigate(['/user/login']);\n            }\n        }\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { catchError, tap, map } from 'rxjs/operators';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport {BehaviorSubject} from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class RoleDataService {\r\n    private allowedRoles = new BehaviorSubject<any[]>([\r\n    {\r\n        value: 'member',\r\n        text: 'Member'\r\n    },\r\n    {\r\n        value: 'contributor',\r\n        text: 'Contributor'\r\n    },\r\n    {\r\n        value: 'admin',\r\n        text: 'Admin'\r\n    }\r\n    ]);\r\n\r\n    public getAllowedRoles() {\r\n        return this.allowedRoles.asObservable();\r\n    }\r\n}","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n            <form [formGroup]=\\\"thisForm\\\" (ngSubmit)=\\\"onFormSubmit(thisForm.value)\\\">\\n                \\n                <mat-toolbar>\\n                    <span>{{ roleModelType | titlecase}}</span>\\n                    <span>&nbsp;{{'| ' + roleModel?.fullname }} > Edit Role</span>\\n                </mat-toolbar>\\n\\n                <div class=\\\"button-row\\\">\\n                    <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/roles', roleModelType, roleModelId]\\\"><mat-icon>list</mat-icon></a>\\n                </div>\\n\\n                <div class=\\\"button-row\\\">\\n                    <button type=\\\"submit\\\" [disabled]=\\\"!thisForm.valid\\\" mat-raised-button color=\\\"primary\\\"><mat-icon>save</mat-icon></button>\\n                    <a mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteEntry()\\\"><mat-icon>delete_forever</mat-icon></a>\\n                </div>\\n\\n                <div class=\\\"row query-info\\\">\\n                    <div class=\\\"col-lg-2\\\">\\n                        <label>User</label>\\n                        <h6>{{data.user?.firstname + ' ' + data.user?.lastname}}</h6>\\n                    </div>\\n                </div>\\n\\n                <mat-form-field class=\\\"example-full-width\\\">\\n                    <mat-label>Role</mat-label>\\n                    <mat-select formControlName=\\\"role\\\" [errorStateMatcher]=\\\"matcher\\\">\\n                        <mat-option *ngFor=\\\"let role of allowedRoles\\\" [value]=\\\"role.value\\\">\\n                            {{role.text}} \\n                        </mat-option>\\n                    </mat-select>\\n                    <mat-error>\\n                        <div *ngIf=\\\"f.role.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.role.errors.required\\\">Required</div>\\n                        </div>\\n                    </mat-error>\\n                </mat-form-field>\\n\\n            </form>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport {Observable,of, from } from 'rxjs';\n\nimport { ApiService } from '../../_services/api.service';\nimport { DialogDeleteComponent } from '../../_dialogs/dialog-delete.component';\nimport { AlertsService } from 'angular-alert-module';\n\nimport { RoleDataService } from '../role-data.service';\n\n@Component({\n    selector: 'app-role-detail',\n    templateUrl: './role-detail.component.html',\n    styleUrls: ['./role-detail.component.css']\n})\nexport class RoleDetailComponent implements OnInit {\n\n    thisForm: FormGroup;\n    data = [];\n\n    // will contain all allowed user roles\n    allowedRoles = [];\n\n    // Variables to host data about the queried model in the URL\n    roleModel : any = '';\n    roleModelType : string = '';\n    roleModelId : string = '';\n    \n    constructor(private roleDataService: RoleDataService, private router: Router,\n        private route: ActivatedRoute, private api: ApiService, private formBuilder: FormBuilder,\n        public dialog: MatDialog, private alerts: AlertsService) {\n\n        this.route.url.subscribe(params => {\n            // Is it an organization or a project\n            // Read from the url parameter\n            this.roleModelType = params[1].path;\n            this.roleModelId = params[2].path;\n        })\n    }\n    \n    ngOnInit() {\n        // Create form\n        this.thisForm = this.formBuilder.group({\n            'role': [null, [Validators.required]]\n        });\n\n        // Get the allowed user roles\n        this.roleDataService.getAllowedRoles().subscribe(resp => {\n            this.allowedRoles = resp;\n        },\n        err =>{\n            if(err['status'] == 401) {\n                localStorage.clear();\n                this.router.navigate(['/user/login']);\n            }\n        }\n        );\n\n        // Get data of the queried user's role\n        this.getData(this.route.snapshot.params['id']);\n\n        /////////////\n        // Get the queried project\n        /////////////\n        if (this.roleModelType == 'project'){\n            this.api.getProject(this.roleModelId).subscribe(resp => {\n\n                // Errors\n                if ( resp['success'] === undefined || resp['success'] == false ){\n                    this.alerts.setMessage(resp['msg'], 'error');\n                    this.router.navigate(['/roles/' + this.roleModelType + '/' + this.roleModelId]);\n                }\n                else if ( resp['data'] === undefined || !Object.keys(resp['data']).length ){\n                    this.alerts.setMessage('Error fetching data', 'error');\n                    this.router.navigate(['/roles/' + this.roleModelType + '/' + this.roleModelId]);\n                }\n\n                else{\n                    // Save the data locally\n                    this.roleModel = resp['data'];\n                }\n            },\n            err =>{\n                if(err['status'] == 401) {\n                    localStorage.clear();\n                    this.router.navigate(['/user/login']);\n                }\n            }\n            );\n        }\n\n        // Get the queried organization\n        else if (this.roleModelType == 'org') {\n            this.api.getOrganization(this.roleModelId).subscribe(resp => {\n\n                // Errors\n                if ( resp['success'] === undefined || resp['success'] == false ){\n                    this.alerts.setMessage(resp['msg'], 'error');\n                    this.router.navigate(['/roles/' + this.roleModelType + '/' + this.roleModelId]);\n                }\n                else if ( resp['data'] === undefined || !Object.keys(resp['data']).length ){\n                    this.alerts.setMessage('Error fetching data', 'error');\n                    this.router.navigate(['/roles/' + this.roleModelType + '/' + this.roleModelId]);\n                }\n\n                else{\n                    // Save the data locally\n                    this.roleModel = resp['data'];\n                }\n            },\n            err =>{\n                if(err['status'] == 401) {\n                    localStorage.clear();\n                    this.router.navigate(['/user/login']);\n                }\n            }\n            );\n        }\n    }\n    get f() { return this.thisForm.controls; }\n    \n    // Get data via API\n    getData(id) {\n        this.api.getUserRole(id, this.roleModelType, this.roleModelId).subscribe(resp => {\n\n            // Errors\n            if ( resp['success'] === undefined || resp['success'] == false ){\n                this.alerts.setMessage(resp['msg'], 'error');\n                this.router.navigate(['/roles/' + this.roleModelType + '/' + this.roleModelId]);\n            }\n            else if ( resp['data'] === undefined || !Object.keys(resp['data']).length ){\n                this.alerts.setMessage('Error fetching data', 'error');\n                this.router.navigate(['/roles/' + this.roleModelType + '/' + this.roleModelId]);\n            }\n\n            else{\n                // Save a copy of the data to be used locally\n                this.data = resp['data'];\n                \n                // Update the form values\n                this.thisForm.setValue({\n                    role: (resp['data'].role !== undefined && resp['data'].role) ? resp['data'].role : 'member'\n                });\n            }\n        },\n        err =>{\n            if(err['status'] == 401) {\n                localStorage.clear();\n                this.router.navigate(['/user/login']);\n            }\n        }\n        );\n    }\n    \n    // Form submit\n    onFormSubmit(form:NgForm) {\n\n        // Update via API\n        this.api.putUserRole(this.route.snapshot.params['id'],  this.roleModelType, this.roleModelId, form)\n        .subscribe(resp => {\n\n            // Ok\n            if (resp['success'] !== undefined && resp['success'] == true){\n                this.alerts.setMessage(resp['msg'], 'success');\n            }\n\n            // Error\n            else{\n                this.alerts.setMessage(resp['msg'], 'error');\n            }\n        },\n        err =>{\n            if(err['status'] == 401) {\n                localStorage.clear();\n                this.router.navigate(['/user/login']);\n            }\n        }\n        );\n    }\n    \n    // Delete entry\n    deleteEntry() {\n        const dialogRef = this.dialog.open(DialogDeleteComponent);\n        \n        dialogRef.afterClosed().subscribe(result => {\n            if (result !== undefined && result == true ){\n\n                // Call the API to delete the role\n                this.api.deleteUserRole(this.data['_id'], this.roleModelType, this.roleModelId)\n                .subscribe(resp => {\n\n                    // Success\n                    if (resp['success'] !== undefined && resp['success'] == true){\n                        this.alerts.setMessage(resp['msg'], 'success');\n                        this.router.navigate(['/roles/' + this.roleModelType + '/' + this.roleModelId]);\n                    }\n\n                    // Error\n                    else{\n                        this.alerts.setMessage(resp['msg'], 'error');\n                    }\n                },\n                err =>{\n                    if(err['status'] == 401) {\n                        localStorage.clear();\n                        this.router.navigate(['/user/login']);\n                    }\n                }\n                );\n            }\n        });\n    }\n}\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-role-home',\n    templateUrl: './role-home.component.html',\n    styleUrls: ['./role-home.component.css']\n})\nexport class RoleHomeComponent{}","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n\\n    <mat-toolbar>\\n        <span>{{ roleModelType | titlecase}}</span>\\n        <span>&nbsp;{{'| ' + roleModel?.fullname }} > Roles</span>\\n    </mat-toolbar>\\n\\n    <div class=\\\"button-row\\\">\\n        <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/roles','create',roleModelType, roleModelId]\\\"><mat-icon>add</mat-icon></a>\\n    </div>\\n\\n    <div class=\\\"example-container mat-elevation-z8\\\">\\n        <table mat-table #table matSort [dataSource]=\\\"dataSource\\\">\\n\\n            <ng-container matColumnDef=\\\"edit\\\">\\n                <th mat-header-cell *matHeaderCellDef>Edit</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">\\n                    <a mat-icon-button color=\\\"primary\\\" [routerLink]=\\\"['/roles',element._id,roleModelType,roleModelId]\\\">\\n                        <mat-icon class=\\\"mat-18\\\">edit</mat-icon>\\n                    </a>\\n                </td>\\n            </ng-container> \\n\\n            <ng-container matColumnDef=\\\"role\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>role</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">{{element.role}}</td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"user\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>User</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">{{element.user.firstname + ' ' + element.user.lastname}}</td>\\n            </ng-container>\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n        </table>\\n    </div>\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AlertsService } from 'angular-alert-module';\n\nimport { ApiService } from '../../_services/api.service';\n\n@Component({\n    selector: 'app-role-list',\n    templateUrl: './role-list.component.html',\n    styleUrls: ['./role-list.component.css']\n})\nexport class RoleListComponent implements OnInit {\n    // Columns to display\n    displayedColumns = [\n    'edit',\n    'role',\n    'user'\n    ];\n\n    // Variables to host data about the queried model in the URL\n    roleModel : any = '';\n    roleModelType : string = '';\n    roleModelId : string = '';\n\n    // Source for the table data\n    dataSource = new MatTableDataSource<Element>();\n    @ViewChild(MatSort) sort: MatSort;\n\n    constructor(private api: ApiService, private route: ActivatedRoute, private router: Router, private alerts: AlertsService) {\n        \n        // Check which model (organization, project) we are creating for\n        this.roleModelId = route.snapshot.params.id;\n        this.route.url.subscribe(params => {\n            // Is it an organization or a project\n            // Read from the url parameter\n            this.roleModelType = params[0].path;\n        })\n    }\n    \n    ngOnInit() {\n\n        // Provide sorting to the data source\n        this.dataSource.sort = this.sort;\n\n        // Get the data\n        this.api.getUserRoles(this.roleModelType, this.roleModelId).subscribe(resp => {\n            // Populate the data source\n            if ( resp['success'] !== undefined && resp['success'] == true\n                && resp['data'] !== undefined) {\n                this.dataSource.data = resp['data'];\n            }\n        },\n        err =>{\n            if(err['status'] == 401) {\n                localStorage.clear();\n                this.router.navigate(['/user/login']);\n            }\n        }\n        );\n\n        /////////////\n        // Get the queried project\n        if (this.roleModelType == 'project'){\n            this.api.getProject(this.roleModelId).subscribe(resp => {\n\n                // Errors\n                if ( resp['success'] === undefined || resp['success'] == false ){\n                    this.alerts.setMessage(resp['msg'], 'error');\n                    this.router.navigate(['/projects']);\n                }\n                else if ( resp['data'] === undefined || !Object.keys(resp['data']).length ){\n                    this.alerts.setMessage('Error fetching data', 'error');\n                    this.router.navigate(['/projects']);\n                }\n\n                else{\n                    // Save the data locally\n                    this.roleModel = resp['data'];\n                }\n            },\n            err => {\n                if(err['status'] == 401) {\n                    localStorage.clear();\n                    this.router.navigate(['/user/login']);\n                }\n\n                // any other error\n                this.alerts.setMessage('Invalid project', 'error');\n                this.router.navigate(['/projects']);\n            }\n            );\n        }\n\n        // Get the queried organization\n        else if (this.roleModelType == 'org') {\n            this.api.getOrganization(this.roleModelId).subscribe(resp => {\n\n                // Errors\n                if ( resp['success'] === undefined || resp['success'] == false ){\n                    this.alerts.setMessage(resp['msg'], 'error');\n                    this.router.navigate(['/organizations']);\n                }\n                else if ( resp['data'] === undefined || !Object.keys(resp['data']).length ){\n                    this.alerts.setMessage('Error fetching data', 'error');\n                    this.router.navigate(['/organizations']);\n                }\n\n                else{\n                    // Save the data locally\n                    this.roleModel = resp['data'];\n                }\n            },\n            err => {\n                if(err['status'] == 401) {\n                    localStorage.clear();\n                    this.router.navigate(['/user/login']);\n                }\n\n                // any other error\n                this.alerts.setMessage('Invalid organization', 'error');\n                this.router.navigate(['/organizations']);\n            }\n            );\n        }\n    }\n}","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { RoleHomeComponent } from './role-home/role-home.component';\nimport { RoleListComponent } from './role-list/role-list.component';\nimport { RoleDetailComponent } from './role-detail/role-detail.component';\nimport { RoleCreateComponent } from './role-create/role-create.component';\n\nimport { RoleDataService } from './role-data.service';\n\nimport { AuthGuard } from '../_guards/auth-guard.service';\n\nconst routes: Routes = [\n{\n    path: 'roles',\n    component: RoleHomeComponent,\n    canActivate: [AuthGuard],\n    children: [\n    {\n        path: '',\n        component: RoleHomeComponent\n    },\n    {\n        path: 'create/org/:roleModelId',\n        component: RoleCreateComponent\n    },\n    {\n        path: 'create/project/:roleModelId',\n        component: RoleCreateComponent\n    },\n    {\n        path: ':id/org/:roleModelId',\n        component: RoleDetailComponent\n    },\n    {\n        path: ':id/project/:roleModelId',\n        component: RoleDetailComponent\n    },\n    {\n        path: 'org/:id',\n        component: RoleListComponent\n    },\n    {\n        path: 'project/:id',\n        component: RoleListComponent\n    }\n    ]\n}\n];\n\n@NgModule({\n    imports: [\n    RouterModule.forChild(routes),\n    ],\n    exports: [\n    RouterModule\n    ],\n    providers: [ RoleDataService ]\n})\nexport class RoleRoutingModule { }","// Generic imports\nimport { NgModule }       from '@angular/core';\nimport { CommonModule }   from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AlertsModule } from 'angular-alert-module';\nimport {\n    MatInputModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatSortModule,\n    MatTableModule,\n    MatIconModule,\n    MatRadioModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatCardModule,\n    MatToolbarModule,\n    MatDialogModule,\n    MatSelectModule,\nMatFormFieldModule } from '@angular/material';\n\n// Standard imports for all routes\nimport { DialogDeleteComponent } from '../_dialogs/dialog-delete.component';\nimport { AuthGuard } from '../_guards/auth-guard.service';\nimport { AdminGuard } from '../_guards/admin-guard.service';\nimport { CoreModule } from '../core/core.module';\n\n// Role specific imports\nimport { RoleHomeComponent } from './role-home/role-home.component';\nimport { RoleCreateComponent } from './role-create/role-create.component';\nimport { RoleListComponent } from './role-list/role-list.component';\nimport { RoleDetailComponent } from './role-detail/role-detail.component';\nimport { RoleRoutingModule } from './role-routing.module';\n\n@NgModule({\n    imports: [\n        RoleRoutingModule,\n        BrowserModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        BrowserAnimationsModule,\n        CoreModule,\n        MatInputModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatSortModule,\n        MatProgressSpinnerModule,\n        MatIconModule,\n        MatDialogModule,\n        MatToolbarModule,\n        MatCheckboxModule,\n        MatButtonModule,\n        MatRadioModule,\n        MatCardModule,\n        MatSelectModule,\n        MatFormFieldModule\n    ],\n    declarations: [\n        RoleHomeComponent,\n        RoleCreateComponent,\n        RoleListComponent,\n        RoleDetailComponent\n    ],\n    providers: [\n        AuthGuard,\n        AdminGuard\n    ],\n    entryComponents: [DialogDeleteComponent]\n})\nexport class RoleModule {}","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-user-home',\n    templateUrl: './user-home.component.html',\n    styleUrls: ['./user-home.component.css']\n})\nexport class UserHomeComponent implements OnInit {\n    constructor() { }\n    \n    ngOnInit() {\n    }\n}","module.exports = \"body {\\r\\n  padding-top: 40px;\\r\\n  padding-bottom: 40px;\\r\\n  background-color: #eee;\\r\\n}\\r\\n\\r\\n.form-signin {\\r\\n  max-width: 330px;\\r\\n  padding: 15px;\\r\\n  margin: 0 auto;\\r\\n}\\r\\n\\r\\n.form-signin .form-signin-heading,\\r\\n.form-signin .checkbox {\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n.form-signin .checkbox {\\r\\n  font-weight: normal;\\r\\n}\\r\\n\\r\\n.form-signin .form-control {\\r\\n  position: relative;\\r\\n  height: auto;\\r\\n  box-sizing: border-box;\\r\\n  padding: 10px;\\r\\n  font-size: 16px;\\r\\n}\\r\\n\\r\\n.form-signin .form-control:focus {\\r\\n  z-index: 2;\\r\\n}\\r\\n\\r\\n.form-signin input[type=\\\"email\\\"] {\\r\\n  margin-bottom: -1px;\\r\\n  border-bottom-right-radius: 0;\\r\\n  border-bottom-left-radius: 0;\\r\\n}\\r\\n\\r\\n.form-signin input[type=\\\"password\\\"] {\\r\\n  margin-bottom: 10px;\\r\\n  border-top-left-radius: 0;\\r\\n  border-top-right-radius: 0;\\r\\n}\\r\\n\\r\\n.form-signin p {\\r\\n  margin-top: 10px;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n    <form class=\\\"form-signin\\\" [formGroup]=\\\"thisForm\\\" (ngSubmit)=\\\"onFormSubmit(thisForm.value)\\\">\\n        <mat-form-field>\\n            <input matInput placeholder=\\\"Enter your email\\\" formControlName=\\\"email\\\" [errorStateMatcher]=\\\"matcher\\\" required>\\n            <mat-error>\\n                <span *ngIf=\\\"!thisForm.get('email').valid && thisForm.get('email').touched\\\">Required</span>\\n            </mat-error>\\n        </mat-form-field>\\n        \\n        <mat-form-field>\\n            <input matInput placeholder=\\\"Enter your password\\\" formControlName=\\\"password\\\" [type]=\\\"hide ? 'password' : 'text'\\\">\\n            <button mat-icon-button matSuffix (click)=\\\"hide = !hide\\\" [attr.aria-label]=\\\"'Hide password'\\\" [attr.aria-pressed]=\\\"hide\\\">\\n                <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\\n            </button>\\n            <mat-error>\\n                <span *ngIf=\\\"!thisForm.get('password').valid && thisForm.get('password').touched\\\">Required</span>\\n            </mat-error>\\n        </mat-form-field>\\n        \\n        <div class=\\\"button-row\\\">\\n            <button type=\\\"submit\\\" [disabled]=\\\"!thisForm.valid\\\" mat-raised-button color=\\\"primary\\\">Login</button>\\n        </div>\\n        \\n\\t\\t<p>Not a member? <a [routerLink]=\\\"['/user/register']\\\">Register here</a></p>\\n    </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { ApiService } from '../../_services/api.service';\nimport { AlertsService } from 'angular-alert-module';\n\n@Component({\n    selector: 'app-user-login',\n    templateUrl: './user-login.component.html',\n    styleUrls: ['./user-login.component.css']\n})\nexport class UserLoginComponent implements OnInit {\n\n    thisForm: FormGroup;\n    \n    constructor(private router: Router, private route: ActivatedRoute, private api: ApiService, private formBuilder: FormBuilder, private alerts: AlertsService) { }\n    \n    ngOnInit() {\n        // Create form\n        this.thisForm = this.formBuilder.group({\n            'email' : [null, [Validators.required, Validators.email]],\n            'password' : [null, Validators.required]\n        });\n    }\n    get f() { return this.thisForm.controls; }\n    \n    // Form submit\n    onFormSubmit(form:NgForm) {\n        this.api.loginUser(form).subscribe(resp => {\n\n            let msg_status = ( resp['success'] !== undefined && resp['success'] == true ) ? 'success' : 'error';\n            if ( resp['success'] !== undefined && resp['success'] == true\n                && resp['token'] !== undefined && resp['token']) {\n\n                localStorage.setItem('jwtToken', 'JWT ' + resp['token']);\n                \n                // Proceed to the main landing page for authorized users\n                this.router.navigate(['/dashboard']);\n            }\n            \n            // Set alert message\n            this.alerts.setMessage(resp['msg'], msg_status);\n            \n        }, err => {}\n        );\n    }\n}","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n\\t<form [formGroup]=\\\"thisForm\\\" (ngSubmit)=\\\"onFormSubmit(thisForm.value)\\\">\\n\\n\\t\\t<mat-form-field class=\\\"example-full-width\\\">\\n\\t\\t\\t<input matInput placeholder=\\\"firstname\\\" formControlName=\\\"firstname\\\" [errorStateMatcher]=\\\"matcher\\\">\\n\\t\\t\\t<mat-error>\\n\\t\\t\\t\\t<span *ngIf=\\\"f.firstname.touched && f.firstname.errors?.required\\\">Required</span>\\n\\t\\t\\t\\t<span *ngIf=\\\"f.firstname.touched && f.firstname.errors?.maxlength\\\">Maximum of 50 characters</span>\\n\\t\\t\\t</mat-error>\\n\\t\\t</mat-form-field>\\n\\n\\t\\t<mat-form-field class=\\\"example-full-width\\\">\\n\\t\\t\\t<input matInput placeholder=\\\"lastname\\\" formControlName=\\\"lastname\\\" [errorStateMatcher]=\\\"matcher\\\">\\n\\t\\t\\t<mat-error>\\n\\t\\t\\t\\t<span *ngIf=\\\"f.lastname.touched && f.lastname.errors?.required\\\">Required</span>\\n\\t\\t\\t\\t<span *ngIf=\\\"f.lastname.touched && f.lastname.errors?.maxlength\\\">Maximum of 50 characters</span>\\n\\t\\t\\t</mat-error>\\n\\t\\t</mat-form-field>\\n\\n\\t\\t<mat-form-field class=\\\"example-full-width\\\">\\n\\t\\t\\t<input matInput type=\\\"email\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\">\\n\\t\\t</mat-form-field>\\n\\n\\t\\t<div class=\\\"button-row\\\">\\n\\t\\t\\t<button type=\\\"submit\\\" [disabled]=\\\"!thisForm.valid\\\" mat-raised-button color=\\\"primary\\\"><mat-icon>save</mat-icon></button>\\n\\t\\t</div>\\n\\t</form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport {MatDialog} from '@angular/material/dialog';\n\nimport { ApiService } from '../../_services/api.service';\nimport { AlertsService } from 'angular-alert-module';\n\n@Component({\n\tselector: 'app-user-profile',\n\ttemplateUrl: './user-profile.component.html',\n\tstyleUrls: ['./user-profile.component.css']\n})\nexport class UserProfileComponent implements OnInit {\n\n\tthisForm: FormGroup;\n\n\tdata = [];\n\n\tconstructor(private router: Router, private route: ActivatedRoute,\n\t\tprivate api: ApiService, private formBuilder: FormBuilder,\n\t\tpublic dialog: MatDialog, private alerts: AlertsService) { }\n\n\tngOnInit() {\n\t\t// Create form\n\t\tthis.thisForm = this.formBuilder.group({\n\t\t\t'firstname': [null, Validators.maxLength(50)],\n\t\t\t'lastname' : [null, Validators.maxLength(50)],\n            'password': [null]\n\t\t});\n\t\t\n\t\t// Update the form values\n\t\tthis.api.getLoggedInUser().subscribe(resp => {\n\n            // Errors\n            if ( resp['success'] === undefined || resp['success'] == false ){\n                this.alerts.setMessage(resp['msg'], 'error');\n                this.router.navigate(['/dashboard']);\n            }\n            else if ( resp['data'] === undefined || !Object.keys(resp['data']).length ){\n                this.alerts.setMessage('Error fetching data', 'error');\n                this.router.navigate(['/dashboard']);\n            }\n\n            else{\n\t            // Save the data locally\n\t            this.data = resp['data'];\n\n\t\t\t\tthis.thisForm.setValue({\n\t\t\t\t\tfirstname: (resp['data'].firstname !== undefined && resp['data'].firstname) ? resp['data'].firstname : false,\n\t\t\t\t\tlastname: (resp['data'].lastname !== undefined && resp['data'].lastname) ? resp['data'].lastname : '',\n\t                password: ''\n\t\t\t\t});\n            }\n\t\t},\n\t\terr =>{\n\t\t    if(err['status'] == 401) {\n\t\t        localStorage.clear();\n\t\t        this.router.navigate(['/user/login']);\n\t\t    }\n\t\t}\n\t\t);\n\t}\n\tget f() { return this.thisForm.controls; }\n\n\t// Form submit\n\tonFormSubmit(form:NgForm) {\n\t\t\n\t\t// Update project via API\n\t\tthis.api.putLoggedInUser(form)\n\t\t.subscribe(resp => {\n\t\t\t\n            // Ok\n            if (resp['success'] !== undefined && resp['success'] == true){\n                this.alerts.setMessage(resp['msg'],'success');\n            }\n\n            // Fail\n            else{\n                let error = ('error' in resp) ? resp['error'] : '';\n                let errorMsg = ('msg' in resp) ? resp['msg'] : '';\n\n                // Duplicate unique fields\n                if ( error && error.code == 11000 ){\n                    var errorField = '';\n                    for (var fieldKey in error.field){\n                        errorField = fieldKey;\n                    }\n\n                    this.alerts.setMessage('Field must be unique: ' + errorField, 'error');\n                }\n\n                // Error message is available\n                else if ( errorMsg ){\n                    this.alerts.setMessage(errorMsg, 'error');\n                }\n            }\n\t\t},\n\t\terr =>{\n\t\t    if(err['status'] == 401) {\n\t\t        localStorage.clear();\n\t\t        this.router.navigate(['/user/login']);\n\t\t    }\n\t\t}\n\t\t);\n\t}\n}","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6 offset-md-3\\\">\\n            <h3>Register</h3>\\n\\n            <form [formGroup]=\\\"thisForm\\\" (ngSubmit)=\\\"onFormSubmit(thisForm.value)\\\">\\n\\n                <mat-form-field class=\\\"example-full-width\\\">\\n                    <input matInput placeholder=\\\"Firstname\\\" formControlName=\\\"firstname\\\" [errorStateMatcher]=\\\"matcher\\\">\\n                    <mat-error>\\n                        <span *ngIf=\\\"f.firstname.touched && f.firstname.errors?.required\\\">Required</span>\\n                        <span *ngIf=\\\"f.firstname.touched && f.firstname.errors?.maxlength\\\">Maximum of 50 characters</span>\\n                    </mat-error>\\n                </mat-form-field>\\n\\n                <mat-form-field class=\\\"example-full-width\\\">\\n                    <input matInput placeholder=\\\"Lastname\\\" formControlName=\\\"lastname\\\" [errorStateMatcher]=\\\"matcher\\\">\\n                    <mat-error>\\n                        <span *ngIf=\\\"f.lastname.touched && f.lastname.errors?.required\\\">Required</span>\\n                        <span *ngIf=\\\"f.lastname.touched && f.lastname.errors?.maxlength\\\">Maximum of 50 characters</span>\\n                    </mat-error>\\n                </mat-form-field>\\n\\n                <mat-form-field class=\\\"example-full-width\\\">\\n                    <input matInput type=\\\"email\\\" placeholder=\\\"Email\\\" formControlName=\\\"email\\\" [errorStateMatcher]=\\\"matcher\\\">\\n                    <mat-error>\\n                        <span *ngIf=\\\"f.email.touched && f.email.errors?.required\\\">Required</span>\\n                        <span *ngIf=\\\"f.email.touched && f.email.errors?.email\\\">Invalid email</span>\\n                        <span *ngIf=\\\"f.email.touched && f.email.errors?.maxlength\\\">Maximum of 256 characters</span>\\n                    </mat-error>\\n                </mat-form-field>\\n\\n                <mat-form-field class=\\\"example-full-width\\\">\\n                    <input matInput placeholder=\\\"Password\\\" formControlName=\\\"password\\\" [errorStateMatcher]=\\\"matcher\\\">\\n                    <mat-error>\\n                        <span *ngIf=\\\"f.password.touched && f.password.errors?.required\\\">Required</span>\\n                        <span *ngIf=\\\"f.password.touched && f.password.errors?.minlength\\\">Minimum 6 characters</span>\\n                    </mat-error>\\n                </mat-form-field>\\n\\n                <mat-form-field class=\\\"example-full-width\\\">\\n                    <input matInput placeholder=\\\"Confirm Password\\\" formControlName=\\\"confirmPassword\\\" [errorStateMatcher]=\\\"matcher\\\">\\n                    <mat-error>\\n                        <span *ngIf=\\\"f.confirmPassword.touched && f.confirmPassword.errors?.required\\\">Required</span>\\n                        <span *ngIf=\\\"f.confirmPassword.touched && f.confirmPassword.errors?.mustMatch\\\">Passwords must match</span>\\n                    </mat-error>\\n                </mat-form-field>\\n\\n                <div class=\\\"button-row\\\">\\n                    <button type=\\\"submit\\\" [disabled]=\\\"!thisForm.valid\\\" mat-raised-button color=\\\"primary\\\"><mat-icon>done</mat-icon></button>\\n                </div>\\n\\n            </form>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AlertsService } from 'angular-alert-module';\n\nimport { ApiService } from '../../_services/api.service';\nimport { MustMatch } from '../../_helpers/must-match.validator';\n\n@Component({\n    selector: 'app-user-register',\n    templateUrl: './user-register.component.html',\n    styleUrls: ['./user-register.component.css']\n})\nexport class UserRegisterComponent implements OnInit {\n\n    thisForm: FormGroup;\n    \n    constructor(private alerts: AlertsService, private formBuilder: FormBuilder, private router: Router, private route: ActivatedRoute, private api: ApiService) { }\n    \n    ngOnInit() {\n        this.thisForm = this.formBuilder.group({\n            'firstname': [null, [Validators.required, Validators.maxLength(50)]],\n            'lastname': [null, [Validators.required, Validators.maxLength(50)]],\n            'email': [null, [Validators.required, Validators.email, Validators.maxLength(256)]],\n            'password': [null, [Validators.required, Validators.minLength(6)]],\n            'confirmPassword': [null, Validators.required]\n        }, {\n            validator: MustMatch('password', 'confirmPassword')\n        });\n    }\n    \n    get f() { return this.thisForm.controls; }\n    \n    onFormSubmit(form:NgForm) {\n        this.api.registerUser(form).subscribe(resp => {\n            if (resp['success'] !== undefined && resp['success'] == true){\n                this.router.navigate(['/user/login']);\n            }\n            else{\n                let error = ('error' in resp) ? resp['error'] : '';\n                let errorMsg = ('msg' in resp) ? resp['msg'] : '';\n\n                // Duplicate unique fields\n                if ( error && error.code == 11000 ){\n                    var errorField = '';\n                    for (var fieldKey in error.field){\n                        errorField = fieldKey;\n                    }\n\n                    this.alerts.setMessage('Field must be unique: ' + errorField, 'error');\n                }\n\n                // Error message is available\n                else if ( errorMsg ){\n                    this.alerts.setMessage(errorMsg, 'error');\n                }\n            }\n        },\n        err =>{\n            if(err['status'] == 401) {\n                localStorage.clear();\n                this.router.navigate(['/user/login']);\n            }\n        }\n        );\n    }\n}                ","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { UserHomeComponent } from './user-home/user-home.component';\r\nimport { UserLoginComponent } from './user-login/user-login.component';\r\nimport { UserRegisterComponent } from './user-register/user-register.component';\r\nimport { UserProfileComponent } from './user-profile/user-profile.component';\r\n\r\nimport { RedirectLoginGuard } from '../_guards/redirect-login-guard.service';\r\nimport { AuthGuard } from '../_guards/auth-guard.service';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'user',\r\n        component: UserHomeComponent,\r\n        children: [\r\n            {\r\n                path: '',\r\n                component: UserLoginComponent\r\n            },\r\n            {\r\n                path: 'login',\r\n                canActivate: [RedirectLoginGuard],\r\n                component: UserLoginComponent\r\n            },\r\n            {\r\n                path: 'register',\r\n                canActivate: [RedirectLoginGuard],\r\n                component: UserRegisterComponent\r\n            },\r\n            {\r\n                path: 'profile',\r\n                canActivate: [AuthGuard],\r\n                component: UserProfileComponent,\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes),\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class UserRoutingModule { }","// Generic imports\r\nimport { NgModule }       from '@angular/core';\r\nimport { CommonModule }   from '@angular/common';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AlertsModule } from 'angular-alert-module';\r\n\r\nimport {\r\n    MatInputModule,\r\n    MatPaginatorModule,\r\n    MatProgressSpinnerModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatCardModule,\r\n    MatDialogModule,\r\n    MatProgressBarModule,\r\n    MatSelectModule,\r\nMatFormFieldModule } from '@angular/material';\r\n\r\nimport { DialogDeleteComponent } from '../_dialogs/dialog-delete.component';\r\n\r\n// Standard imports for all routes\r\nimport { AuthGuard } from '../_guards/auth-guard.service';\r\nimport { AdminGuard } from '../_guards/admin-guard.service';\r\nimport { RedirectLoginGuard } from '../_guards/redirect-login-guard.service';\r\nimport { CoreModule } from '../core/core.module';\r\n\r\n// User specific imports\r\nimport { UserHomeComponent } from './user-home/user-home.component';\r\nimport { UserLoginComponent } from './user-login/user-login.component';\r\nimport { UserRegisterComponent } from './user-register/user-register.component';\r\nimport { UserRoutingModule } from './user-routing.module';\r\nimport { UserProfileComponent } from './user-profile/user-profile.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        UserRoutingModule,\r\n        BrowserModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        HttpClientModule,\r\n        BrowserAnimationsModule,\r\n        CoreModule,\r\n        MatInputModule,\r\n        MatTableModule,\r\n        MatPaginatorModule,\r\n        MatSortModule,\r\n        MatProgressSpinnerModule,\r\n        MatIconModule,\r\n        MatDialogModule,\r\n        MatCheckboxModule,\r\n        MatButtonModule,\r\n        MatCardModule,\r\n        MatSelectModule,\r\n        MatFormFieldModule,\r\n        MatProgressBarModule,\r\n    ],\r\n    declarations: [\r\n        UserHomeComponent,\r\n        UserLoginComponent,\r\n        UserRegisterComponent,\r\n        UserProfileComponent\r\n    ],\r\n    providers: [\r\n        AuthGuard,\r\n        AdminGuard,\r\n        RedirectLoginGuard\r\n    ]\r\n})\r\nexport class UserModule {}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}